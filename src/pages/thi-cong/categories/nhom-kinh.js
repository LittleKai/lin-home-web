// src/pages/thi-cong/nhom-kinh.js
import React, { useState } from 'react';
import Header from '../../../components/Header/Header';
import Footer from '../../../components/Footer/Footer';
import FloatButtons from '../../../components/FloatButtons/FloatButtons';
import '../../thiet-ke/ThietKePage.css';
import '../ThiCongHangMuc.css';

const NhomKinhPage = () => {
    const [activeFaq, setActiveFaq] = useState(null);
    const [activeSystem, setActiveSystem] = useState('system55');

    // Aluminum glass systems
    const aluminumSystems = {
        system55: {
            title: 'H·ªá 55 (C·ª≠a s·ªï - C·ª≠a ƒëi)',
            profile: '55mm',
            glassThickness: '5-6mm',
            applications: 'C·ª≠a s·ªï, c·ª≠a ƒëi th√¥ng th∆∞·ªùng',
            advantages: [
                'Gi√° th√†nh h·ª£p l√Ω',
                'Ph√π h·ª£p di·ªán t√≠ch v·ª´a v√† nh·ªè',
                'L·∫Øp ƒë·∫∑t ƒë∆°n gi·∫£n',
                'B·∫£o tr√¨ d·ªÖ d√†ng'
            ],
            priceRange: '800.000 - 1.200.000ƒë/m¬≤'
        },
        system65: {
            title: 'H·ªá 65 (C·ª≠a s·ªï cao c·∫•p)',
            profile: '65mm',
            glassThickness: '6-8mm',
            applications: 'C·ª≠a s·ªï cao t·∫ßng, c·ª≠a ban c√¥ng',
            advantages: [
                'C√°ch √¢m t·ªët h∆°n h·ªá 55',
                'Ch·ªãu ƒë∆∞·ª£c √°p l·ª±c gi√≥ cao',
                'Kh·∫£ nƒÉng ch·ªëng th·∫•m t·ªët',
                'Ph√π h·ª£p cao ·ªëc, chung c∆∞'
            ],
            priceRange: '1.000.000 - 1.600.000ƒë/m¬≤'
        },
        system100: {
            title: 'H·ªá 100 (M·∫∑t d·ª±ng)',
            profile: '100mm',
            glassThickness: '8-12mm',
            applications: 'M·∫∑t d·ª±ng t√≤a nh√†, showroom',
            advantages: [
                'Ch·ªãu l·ª±c cao, an to√†n',
                'C√°ch nhi·ªát, c√°ch √¢m t·ªëi ∆∞u',
                'Th·∫©m m·ªπ hi·ªán ƒë·∫°i',
                'Ph√π h·ª£p c√¥ng tr√¨nh l·ªõn'
            ],
            priceRange: '1.500.000 - 2.500.000ƒë/m¬≤'
        }
    };

    // Material features
    const materialFeatures = {
        advantages: [
            'Nh·∫π, b·ªÅn, ch·ªëng ƒÉn m√≤n t·ª± nhi√™n',
            'Nhi·ªÅu h·ªá profile ƒë·ªÉ l·ª±a ch·ªçn',
            'K·∫øt h·ª£p k√≠nh an to√†n ƒëa d·∫°ng',
            'Kh·∫£ nƒÉng c√°ch √¢m, c√°ch nhi·ªát t·ªët',
            'Th·∫©m m·ªπ hi·ªán ƒë·∫°i, sang tr·ªçng',
            'Tu·ªïi th·ªç cao, √≠t b·∫£o tr√¨'
        ],
        considerations: [
            'C·∫ßn thi c√¥ng ch√≠nh x√°c ƒë·ªÉ ƒë·∫£m b·∫£o k√≠n kh√≠t',
            'Profile r·∫ª c√≥ ƒë·ªô ·ªïn ƒë·ªãnh m√†u k√©m',
            'K√≠nh c·∫ßn ch·ªçn lo·∫°i ph√π h·ª£p (an to√†n, c√°ch nhi·ªát)',
            'Ph·ª• ki·ªán ch·∫•t l∆∞·ª£ng ·∫£nh h∆∞·ªüng ƒë·∫øn tu·ªïi th·ªç'
        ]
    };

    // Common issues and solutions
    const commonIssues = [
        {
            issue: 'R·ªâ n∆∞·ªõc/th·ªßy t·∫°t qua khe',
            cause: 'Ron, keo k√©m ch·∫•t l∆∞·ª£ng ho·∫∑c l·∫Øp sai ƒë·ªô d·ªëc',
            solution: 'Ki·ªÉm tra, thay ron m·ªõi, x·ª≠ l√Ω keo, ch·ªânh l·∫°i ƒë·ªô d·ªëc tho√°t n∆∞·ªõc',
            prevention: 'S·ª≠ d·ª•ng ron EPDM ch·∫•t l∆∞·ª£ng, ki·ªÉm tra ƒë·ªô d·ªëc',
            icon: 'fa-tint'
        },
        {
            issue: 'C·ª≠a c·∫•n, k·∫πt khi ƒë√≥ng m·ªü',
            cause: 'L·∫Øp kh√¥ng ƒë√∫ng c·ªët ho·∫∑c k√≠nh/khung kh√¥ng vu√¥ng',
            solution: 'ƒêi·ªÅu ch·ªânh b·∫£n l·ªÅ, ki·ªÉm tra v√† ch·ªânh l·∫°i khung',
            prevention: 'ƒêo ƒë·∫°c ch√≠nh x√°c, ki·ªÉm tra vu√¥ng g√≥c',
            icon: 'fa-door-open'
        },
        {
            issue: 'X·ªá c√°nh sau th·ªùi gian s·ª≠ d·ª•ng',
            cause: 'V√≠t n·ªü ho·∫∑c ƒëi·ªÉm ƒë·ªãnh v·ªã kh√¥ng ƒë·ªß ch·∫Øc',
            solution: 'Gia c·ªë l·∫°i b·∫£n l·ªÅ, tƒÉng c∆∞·ªùng ƒëi·ªÉm b·∫Øt v√≠t',
            prevention: 'S·ª≠ d·ª•ng ph·ª• ki·ªán ch·∫•t l∆∞·ª£ng, b·∫Øt v√≠t ƒë√∫ng k·ªπ thu·∫≠t',
            icon: 'fa-tools'
        },
        {
            issue: 'M·∫•t c√°ch √¢m, ·ªìn √†o',
            cause: 'Khe h·ªü l·ªõn, ron k√©m ho·∫∑c k√≠nh ƒë∆°n',
            solution: 'Thay ron m·ªõi, s·ª≠ d·ª•ng k√≠nh h·ªôp, ƒëi·ªÅu ch·ªânh khe h·ªü',
            prevention: 'Ch·ªçn h·ªá profile v√† k√≠nh c√°ch √¢m ph√π h·ª£p',
            icon: 'fa-volume-up'
        }
    ];

    // Customer pain points
    const customerConcerns = [
        {
            concern: 'S·ª£ c·ª≠a/c·ª≠a s·ªï r√≤ r·ªâ n∆∞·ªõc, gi√≥ l·ªçt',
            description: 'G√¢y t·ªën ƒëi·ªán ƒëi·ªÅu h√≤a v√† kh√≥ ch·ªãu khi s·ª≠ d·ª•ng',
            solution: 'Cam k·∫øt k·ªπ thu·∫≠t l·∫Øp ƒë·∫∑t chu·∫©n, s·ª≠ d·ª•ng ron EPDM ch·∫•t l∆∞·ª£ng cao'
        },
        {
            concern: 'Lo l·∫Øng v·ªÅ an to√†n k√≠nh',
            description: 'K√≠nh m·∫£nh, kh√¥ng ch·ªãu va ƒë·∫≠p khi·∫øn lo ng·∫°i v·ªÅ tr·∫ª em',
            solution: 'T∆∞ v·∫•n k√≠nh an to√†n (tempered, laminated), tu√¢n th·ªß ti√™u chu·∫©n'
        },
        {
            concern: 'Mu·ªën th·∫©m m·ªπ hi·ªán ƒë·∫°i',
            description: 'Nh∆∞ng s·ª£ nhanh xu·ªëng m√†u, m·∫•t t√≠nh th·∫©m m·ªπ',
            solution: 'Ch·ªçn profile c√≥ x·ª≠ l√Ω b·ªÅ m·∫∑t t·ªët, b·∫£o h√†nh m√†u s·∫Øc'
        }
    ];

    // Construction process
    const constructionProcess = [
        {
            step: 1,
            title: 'Kh·∫£o s√°t k√≠ch th∆∞·ªõc th·ª±c t·∫ø',
            description: 'ƒêo ƒë·∫°c ch√≠nh x√°c, ki·ªÉm tra t∆∞·ªùng v√† v·ªã tr√≠ l·∫Øp ƒë·∫∑t',
            duration: '0.5 ng√†y',
            tools: 'Th∆∞·ªõc laser, m√°y ƒëo g√≥c'
        },
        {
            step: 2,
            title: 'Ch·ªët profile v√† k√≠nh',
            description: 'L·ª±a ch·ªçn h·ªá profile (55, 65, 100...), lo·∫°i k√≠nh v√† ph·ª• ki·ªán',
            duration: '1 ng√†y',
            tools: 'Catalog s·∫£n ph·∫©m, m·∫´u profile'
        },
        {
            step: 3,
            title: 'Gia c√¥ng t·∫°i x∆∞·ªüng',
            description: 'C·∫Øt, gia c√¥ng profile v√† k√≠nh theo k√≠ch th∆∞·ªõc ch√≠nh x√°c',
            duration: '2-5 ng√†y',
            tools: 'M√°y c·∫Øt nh√¥m, m√°y gia c√¥ng k√≠nh'
        },
        {
            step: 4,
            title: 'L·∫Øp ƒë·∫∑t khung v√† k√≠nh',
            description: 'L·∫Øp khung, l·∫Øp k√≠nh, b·∫Øt ·ªëc, ki·ªÉm tra ƒë·ªô vu√¥ng',
            duration: '1-3 ng√†y',
            tools: 'Khoan, v√≠t chuy√™n d·ª•ng, keo silicon'
        },
        {
            step: 5,
            title: 'ƒê√≥ng keo v√† d√°n ron',
            description: 'X·ª≠ l√Ω keo ch·ªëng th·∫•m, d√°n ron c√°ch √¢m',
            duration: '0.5 ng√†y',
            tools: 'S√∫ng b·∫Øn keo, ron EPDM'
        },
        {
            step: 6,
            title: 'Ki·ªÉm tra v√† nghi·ªám thu',
            description: 'Test ƒë·ªô k√≠n kh√≠t, ch·ªânh b·∫£n l·ªÅ, b√†n giao',
            duration: '0.5 ng√†y',
            tools: 'D·ª•ng c·ª• ki·ªÉm tra, m√°y th·ªïi gi√≥'
        }
    ];

    // Glass types
    const glassTypes = [
        {
            type: 'K√≠nh c∆∞·ªùng l·ª±c (Tempered)',
            features: 'An to√†n khi v·ª°, ch·ªãu l·ª±c t·ªët',
            applications: 'C·ª≠a ch√≠nh, m·∫∑t d·ª±ng, c·ª≠a s·ªï l·ªõn',
            thickness: '6-12mm',
            icon: 'fa-shield-alt'
        },
        {
            type: 'K√≠nh nhi·ªÅu l·ªõp (Laminated)',
            features: 'An to√†n cao, c√°ch √¢m t·ªët',
            applications: 'M·∫∑t d·ª±ng cao t·∫ßng, khu v·ª±c an ninh',
            thickness: '6.38-12.76mm',
            icon: 'fa-layer-group'
        },
        {
            type: 'K√≠nh h·ªôp (Double glazing)',
            features: 'C√°ch nhi·ªát, c√°ch √¢m t·ªëi ∆∞u',
            applications: 'C·ª≠a s·ªï, c·ª≠a ƒëi cao c·∫•p',
            thickness: '20-24mm',
            icon: 'fa-snowflake'
        },
        {
            type: 'K√≠nh ph·∫£n quang',
            features: 'Ch·ªëng n·∫Øng, ri√™ng t∆∞',
            applications: 'M·∫∑t d·ª±ng t√≤a nh√†, vƒÉn ph√≤ng',
            thickness: '6-8mm',
            icon: 'fa-sun'
        }
    ];

    // FAQ data
    const faqData = [
        {
            id: 1,
            question: 'Nh√¥m k√≠nh c√≥ b·ªã oxy h√≥a kh√¥ng?',
            answer: 'Nh√¥m h·ª£p kim c√≥ l·ªõp x·ª≠ l√Ω b·ªÅ m·∫∑t (anodize/s∆°n tƒ©nh ƒëi·ªán) ch·ªëng ƒÉn m√≤n. Profile ch·∫•t l∆∞·ª£ng th·∫•p c√≥ th·ªÉ xu·ªëng m√†u sau th·ªùi gian.'
        },
        {
            id: 2,
            question: 'C·ª≠a nh√¥m k√≠nh c√≥ c√°ch √¢m t·ªët kh√¥ng?',
            answer: 'C√≥ th·ªÉ c√°ch √¢m t·ªët n·∫øu k·∫øt h·ª£p k√≠nh h·ªôp v√† ron EPDM ch·∫•t l∆∞·ª£ng. H·ªá profile l·ªõn h∆°n (65, 100) c√°ch √¢m t·ªët h∆°n h·ªá 55.'
        },
        {
            id: 3,
            question: 'C√≥ lo·∫°i nh√¥m k√≠nh cho nh√† m·∫∑t ti·ªÅn kh√¥ng?',
            answer: 'C√≥, m·∫∑t d·ª±ng nh√¥m k√≠nh chuy√™n d·ª•ng v·ªõi h·ªá profile 100mm tr·ªü l√™n, ph√π h·ª£p cho t√≤a nh√†, showroom.'
        },
        {
            id: 4,
            question: 'Th·ªùi gian thi c√¥ng nh√¥m k√≠nh l√† bao l√¢u?',
            answer: '5-15 ng√†y t√πy quy m√¥. Bao g·ªìm th·ªùi gian gia c√¥ng t·∫°i x∆∞·ªüng v√† l·∫Øp ƒë·∫∑t t·∫°i hi·ªán tr∆∞·ªùng.'
        },
        {
            id: 5,
            question: 'B·∫£o h√†nh nh√¥m k√≠nh nh∆∞ th·∫ø n√†o?',
            answer: '12-36 th√°ng t√πy ph·ª• ki·ªán v√† h·ªá profile. Bao g·ªìm l·ªói k·ªπ thu·∫≠t, s·ª•t l√∫n v√† h·ªó tr·ª£ thay th·∫ø ph·ª• ki·ªán.'
        }
    ];

    const toggleFaq = (faqId) => {
        setActiveFaq(activeFaq === faqId ? null : faqId);
    };

    return (
        <div className="page-wrapper">
            <Header />

            <main className="main-content">
                {/* Hero Section */}
                <section className="hero-section">
                    <div className="container">
                        <div className="hero-content">
                            <h1>üè¢ Thi C√¥ng Nh√¥m K√≠nh Ch·∫•t L∆∞·ª£ng Cao</h1>
                            <p className="hero-subtitle">
                                C·ª≠a, v√°ch, m·∫∑t d·ª±ng - Th·∫©m m·ªπ, ch·ªãu l·ª±c, c√°ch √¢m, ch·ªëng n√≥ng
                            </p>
                            <div className="hero-stats">
                                <div className="stat-item">
                                    <span className="stat-number">5-15</span>
                                    <span className="stat-label">Ng√†y thi c√¥ng</span>
                                </div>
                                <div className="stat-item">
                                    <span className="stat-number">3</span>
                                    <span className="stat-label">H·ªá profile ch√≠nh</span>
                                </div>
                                <div className="stat-item">
                                    <span className="stat-number">12-36</span>
                                    <span className="stat-label">Th√°ng b·∫£o h√†nh</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

                {/* Introduction */}
                <section className="intro-section">
                    <div className="container">
                        <div className="intro-content">
                            <h2>T·∫°i sao ch·ªçn nh√¥m k√≠nh?</h2>
                            <p>
                                Nh√¥m k√≠nh l√† l·ª±a ch·ªçn ph·ªï bi·∫øn cho <strong>c·ª≠a ƒëi, c·ª≠a s·ªï, v√°ch ngƒÉn v√† m·∫∑t d·ª±ng</strong>
                                nh·ªù t√≠nh nƒÉng nh·∫π, b·ªÅn, d·ªÖ thi c√¥ng v√† phong c√°ch hi·ªán ƒë·∫°i.
                            </p>
                            <p>
                                V·ªõi nhi·ªÅu h·ªá profile t·ª´ c∆° b·∫£n ƒë·∫øn cao c·∫•p, nh√¥m k√≠nh ph√π h·ª£p cho m·ªçi c√¥ng tr√¨nh
                                t·ª´ nh√† ·ªü ƒë·∫øn t√≤a nh√† th∆∞∆°ng m·∫°i.
                            </p>
                        </div>
                    </div>
                </section>

                {/* Aluminum Systems */}
                <section className="systems-section">
                    <div className="container">
                        <h2>C√°c h·ªá profile nh√¥m k√≠nh</h2>
                        <div className="system-tabs">
                            <button
                                className={`tab-button ${activeSystem === 'system55' ? 'active' : ''}`}
                                onClick={() => setActiveSystem('system55')}
                            >
                                H·ªá 55
                            </button>
                            <button
                                className={`tab-button ${activeSystem === 'system65' ? 'active' : ''}`}
                                onClick={() => setActiveSystem('system65')}
                            >
                                H·ªá 65
                            </button>
                            <button
                                className={`tab-button ${activeSystem === 'system100' ? 'active' : ''}`}
                                onClick={() => setActiveSystem('system100')}
                            >
                                H·ªá 100
                            </button>
                        </div>

                        {Object.keys(aluminumSystems).map(system => (
                            <div
                                key={system}
                                className={`system-panel ${activeSystem === system ? 'active' : 'hidden'}`}
                            >
                                <div className="system-header">
                                    <h3>{aluminumSystems[system].title}</h3>
                                    <div className="system-specs">
                                        <span><strong>Profile:</strong> {aluminumSystems[system].profile}</span>
                                        <span><strong>K√≠nh:</strong> {aluminumSystems[system].glassThickness}</span>
                                        <span><strong>Gi√°:</strong> {aluminumSystems[system].priceRange}</span>
                                    </div>
                                </div>

                                <p><strong>·ª®ng d·ª•ng:</strong> {aluminumSystems[system].applications}</p>

                                <div className="system-advantages">
                                    <h4>∆Øu ƒëi·ªÉm:</h4>
                                    <ul>
                                        {aluminumSystems[system].advantages.map((advantage, index) => (
                                            <li key={index}>
                                                <i className="fas fa-check"></i>
                                                {advantage}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        ))}
                    </div>
                </section>

                {/* Material Features */}
                <section className="features-section">
                    <div className="container">
                        <h2>ƒê·∫∑c ƒëi·ªÉm v·∫≠t li·ªáu nh√¥m k√≠nh</h2>
                        <div className="features-grid">
                            <div className="feature-column advantages">
                                <h3><i className="fas fa-thumbs-up"></i> ∆Øu ƒëi·ªÉm</h3>
                                <ul>
                                    {materialFeatures.advantages.map((advantage, index) => (
                                        <li key={index}>
                                            <i className="fas fa-check"></i>
                                            {advantage}
                                        </li>
                                    ))}
                                </ul>
                            </div>
                            <div className="feature-column considerations">
                                <h3><i className="fas fa-info-circle"></i> L∆∞u √Ω</h3>
                                <ul>
                                    {materialFeatures.considerations.map((consideration, index) => (
                                        <li key={index}>
                                            <i className="fas fa-exclamation"></i>
                                            {consideration}
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </div>
                    </div>
                </section>

                {/* Glass Types */}
                <section className="glass-types-section">
                    <div className="container">
                        <h2>C√°c lo·∫°i k√≠nh s·ª≠ d·ª•ng</h2>
                        <div className="glass-grid">
                            {glassTypes.map((glass, index) => (
                                <div key={index} className="glass-card">
                                    <div className="glass-icon">
                                        <i className={`fas ${glass.icon}`}></i>
                                    </div>
                                    <h3>{glass.type}</h3>
                                    <p className="glass-features">{glass.features}</p>
                                    <p><strong>·ª®ng d·ª•ng:</strong> {glass.applications}</p>
                                    <p><strong>ƒê·ªô d√†y:</strong> {glass.thickness}</p>
                                </div>
                            ))}
                        </div>
                    </div>
                </section>

                {/* Common Issues */}
                <section className="issues-section">
                    <div className="container">
                        <h2>C√°c l·ªói th∆∞·ªùng g·∫∑p & c√°ch kh·∫Øc ph·ª•c</h2>
                        <div className="issues-grid">
                            {commonIssues.map((issue, index) => (
                                <div key={index} className="issue-card">
                                    <div className="issue-header">
                                        <div className="issue-icon">
                                            <i className={`fas ${issue.icon}`}></i>
                                        </div>
                                        <h3>{issue.issue}</h3>
                                    </div>
                                    <div className="issue-content">
                                        <p className="issue-cause">
                                            <strong>Nguy√™n nh√¢n:</strong> {issue.cause}
                                        </p>
                                        <p className="issue-solution">
                                            <strong>Kh·∫Øc ph·ª•c:</strong> {issue.solution}
                                        </p>
                                        <p className="issue-prevention">
                                            <strong>Ph√≤ng tr√°nh:</strong> {issue.prevention}
                                        </p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </section>

                {/* Customer Concerns */}
                <section className="concerns-section">
                    <div className="container">
                        <h2>Ph√¢n t√≠ch n·ªói ƒëau kh√°ch h√†ng</h2>
                        <div className="concerns-grid">
                            {customerConcerns.map((concern, index) => (
                                <div key={index} className="concern-card">
                                    <h3><i className="fas fa-exclamation-circle"></i> {concern.concern}</h3>
                                    <p className="concern-description">{concern.description}</p>
                                    <p className="concern-solution">
                                        <strong>Gi·∫£i ph√°p LinHome:</strong> {concern.solution}
                                    </p>
                                </div>
                            ))}
                        </div>
                    </div>
                </section>

                {/* Construction Process */}
                <section className="process-section">
                    <div className="container">
                        <h2>Quy tr√¨nh thi c√¥ng chi ti·∫øt</h2>
                        <div className="process-timeline">
                            {constructionProcess.map((step, index) => (
                                <div key={step.step} className="process-step">
                                    <div className="step-number">{step.step}</div>
                                    <div className="step-content">
                                        <h3>{step.title}</h3>
                                        <p>{step.description}</p>
                                        <div className="step-meta">
                                            <span className="step-duration">
                                                <i className="fas fa-clock"></i>
                                                {step.duration}
                                            </span>
                                            <span className="step-tools">
                                                <i className="fas fa-tools"></i>
                                                {step.tools}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </section>

                {/* FAQ Section */}
                <section className="faq-section">
                    <div className="container">
                        <h2>C√¢u h·ªèi th∆∞·ªùng g·∫∑p (FAQ)</h2>
                        <div className="faq-container">
                            {faqData.map((faq) => (
                                <div key={faq.id} className="faq-item">
                                    <button
                                        className="faq-question"
                                        onClick={() => toggleFaq(faq.id)}
                                        style={{
                                            width: '100%',
                                            padding: '20px',
                                            border: '1px solid #e2e8f0',
                                            borderRadius: '8px',
                                            background: activeFaq === faq.id ? '#f8fafc' : 'white',
                                            textAlign: 'left',
                                            fontSize: '16px',
                                            fontWeight: '600',
                                            color: '#2d3748',
                                            cursor: 'pointer',
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            marginBottom: '10px',
                                            transition: 'all 0.3s ease'
                                        }}
                                    >
                                        <span>{faq.question}</span>
                                        <i className={`fas fa-chevron-${activeFaq === faq.id ? 'up' : 'down'}`}></i>
                                    </button>
                                    {activeFaq === faq.id && (
                                        <div className="faq-answer" style={{
                                            padding: '0 20px 20px',
                                            color: '#4a5568',
                                            lineHeight: '1.6'
                                        }}>
                                            {faq.answer}
                                        </div>
                                    )}
                                </div>
                            ))}
                        </div>
                    </div>
                </section>

                {/* CTA Section */}
                <section className="cta-section">
                    <div className="container">
                        <div className="cta-content">
                            <h2>G·ªçi LinHome ƒë·ªÉ nh·∫≠n ph∆∞∆°ng √°n nh√¥m k√≠nh t·ªëi ∆∞u</h2>
                            <p>
                                Ch√∫ng t√¥i t∆∞ v·∫•n gi·∫£i ph√°p nh√¥m k√≠nh <strong>t·ªëi ∆∞u v·ªÅ th·∫©m m·ªπ & k·ªπ thu·∫≠t</strong>,
                                ph√π h·ª£p v·ªõi c√¥ng nƒÉng s·ª≠ d·ª•ng v√† ng√¢n s√°ch c·ªßa b·∫°n.
                            </p>
                            <div className="cta-buttons">
                                <button className="btn-primary">
                                    <i className="fas fa-phone"></i>
                                    Hotline: 0941 090 333
                                </button>
                                <button className="btn-secondary">
                                    <i className="fas fa-calculator"></i>
                                    B√°o gi√° nh√¥m k√≠nh
                                </button>
                            </div>
                        </div>
                    </div>
                </section>
            </main>

            <Footer />
            <FloatButtons />
        </div>
    );
};

export default NhomKinhPage;
