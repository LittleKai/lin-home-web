// src/pages/bao-gia/bao-gia-sua-chua-cai-tao/CachUocTinhChiPhi.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../../styles/CommonStyles.css';

const CachUocTinhChiPhi = () => {
    const [activeTab, setActiveTab] = useState('basic');
    const [activeFaq, setActiveFaq] = useState(null);

    // Cost estimation methods
    const costMethods = [
        {
            id: 'basic',
            name: 'S·ª≠a Ch·ªØa C∆° B·∫£n',
            price: '800,000 - 1,500,000 VNƒê/m¬≤',
            description: 'S·ª≠a ch·ªØa ƒë∆°n gi·∫£n, thay th·∫ø v·∫≠t li·ªáu c≈©, kh√¥ng thay ƒë·ªïi k·∫øt c·∫•u',
            features: [
                'Thay th·∫ø v·∫≠t li·ªáu c≈© h·ªèng',
                'S∆°n l·∫°i t∆∞·ªùng, tr·∫ßn',
                'S·ª≠a ch·ªØa ƒëi·ªán n∆∞·ªõc nh·ªè',
                'Thay g·∫°ch, s√†n b·ªã v·ª°',
                'B·∫£o h√†nh 6-12 th√°ng'
            ],
            includes: ['V·∫≠t li·ªáu', 'Nh√¢n c√¥ng', 'V·∫≠n chuy·ªÉn', 'D·ªçn d·∫πp'],
            bgColor: '#10b981'
        },
        {
            id: 'medium',
            name: 'C·∫£i T·∫°o Trung B√¨nh',
            price: '1,500,000 - 2,500,000 VNƒê/m¬≤',
            description: 'C·∫£i t·∫°o c√≥ thay ƒë·ªïi b·ªë c·ª•c, n√¢ng c·∫•p h·ªá th·ªëng ƒëi·ªán n∆∞·ªõc',
            features: [
                'ƒê·∫≠p b·ªè v√°ch ngƒÉn c≈©',
                'X√¢y t∆∞·ªùng m·ªõi, thay c·ª≠a',
                'N√¢ng c·∫•p ƒëi·ªán, n∆∞·ªõc, tho√°t n∆∞·ªõc',
                'L√°t g·∫°ch, s∆°n to√†n b·ªô',
                'Thay thi·∫øt b·ªã v·ªá sinh',
                'B·∫£o h√†nh 12-18 th√°ng'
            ],
            includes: ['V·∫≠t li·ªáu cao c·∫•p', 'Nh√¢n c√¥ng chuy√™n nghi·ªáp', 'Thi·∫øt k·∫ø 2D', 'Gi√°m s√°t'],
            bgColor: '#f59e0b'
        },
        {
            id: 'luxury',
            name: 'C·∫£i T·∫°o To√†n Di·ªán',
            price: '2,500,000 - 4,000,000 VNƒê/m¬≤',
            description: 'C·∫£i t·∫°o ho√†n to√†n, thi·∫øt k·∫ø m·ªõi, v·∫≠t li·ªáu cao c·∫•p',
            features: [
                'Thi·∫øt k·∫ø ki·∫øn tr√∫c m·ªõi',
                'ƒê·∫≠p b·ªè to√†n b·ªô c≈©',
                'X√¢y d·ª±ng l·∫°i k·∫øt c·∫•u',
                'H·ªá th·ªëng ƒëi·ªán, n∆∞·ªõc, ƒëi·ªÅu h√≤a m·ªõi',
                'N·ªôi th·∫•t cao c·∫•p, smarthome',
                'B·∫£o h√†nh 24-36 th√°ng'
            ],
            includes: ['Thi·∫øt k·∫ø 3D', 'V·∫≠t li·ªáu nh·∫≠p kh·∫©u', 'Gi√°m s√°t 24/7', 'B·∫£o tr√¨ ƒë·ªãnh k·ª≥'],
            bgColor: '#8b5cf6'
        }
    ];

    // Calculation steps
    const calculationSteps = [
        {
            step: 1,
            title: 'ƒêo ƒê·∫°c Hi·ªán Tr·∫°ng',
            description: 'Kh·∫£o s√°t th·ª±c t·∫ø, ƒëo di·ªán t√≠ch, ki·ªÉm tra k·∫øt c·∫•u c≈©',
            duration: '1-2 ng√†y',
            icon: 'fas fa-ruler-combined'
        },
        {
            step: 2,
            title: 'X√°c ƒê·ªãnh H·∫°ng M·ª•c',
            description: 'Li·ªát k√™ c√¥ng vi·ªác c·∫ßn l√†m: ph√° d·ª°, x√¢y m·ªõi, ho√†n thi·ªán',
            duration: '1 ng√†y',
            icon: 'fas fa-list-check'
        },
        {
            step: 3,
            title: 'T√≠nh To√°n V·∫≠t Li·ªáu',
            description: 'T√≠nh kh·ªëi l∆∞·ª£ng v·∫≠t li·ªáu c·∫ßn thi·∫øt cho t·ª´ng h·∫°ng m·ª•c',
            duration: '1-2 ng√†y',
            icon: 'fas fa-calculator'
        },
        {
            step: 4,
            title: '∆Ø·ªõc T√≠nh Nh√¢n C√¥ng',
            description: 'T√≠nh to√°n s·ªë ng√†y c√¥ng v√† chi ph√≠ nh√¢n c√¥ng',
            duration: '1 ng√†y',
            icon: 'fas fa-users'
        },
        {
            step: 5,
            title: 'B√°o Gi√° Chi Ti·∫øt',
            description: 'L·∫≠p b·∫£ng b√°o gi√° chi ti·∫øt, chia theo h·∫°ng m·ª•c',
            duration: '1-2 ng√†y',
            icon: 'fas fa-file-invoice-dollar'
        }
    ];

    // Cost breakdown items
    const costBreakdown = [
        {
            category: 'Ph√° D·ª° & Chu·∫©n B·ªã',
            percentage: '10-15%',
            items: ['Ph√° d·ª° t∆∞·ªùng c≈©', 'D·ªçn d·∫πp v·ªá sinh', 'B·∫£o v·ªá kh√¥ng gian kh√°c'],
            icon: 'fas fa-hammer'
        },
        {
            category: 'X√¢y D·ª±ng K·∫øt C·∫•u',
            percentage: '25-30%',
            items: ['X√¢y t∆∞·ªùng m·ªõi', 'S·ª≠a c·ªôt d·∫ßm', 'ƒê·ªï b√™ t√¥ng'],
            icon: 'fas fa-building'
        },
        {
            category: 'ƒêi·ªán & N∆∞·ªõc',
            percentage: '15-20%',
            items: ['L·∫Øp ƒëi·ªán m·ªõi', 'ƒê∆∞·ªùng ·ªëng n∆∞·ªõc', 'Thi·∫øt b·ªã v·ªá sinh'],
            icon: 'fas fa-bolt'
        },
        {
            category: 'Ho√†n Thi·ªán',
            percentage: '30-35%',
            items: ['·ªêp l√°t', 'S∆°n n∆∞·ªõc', 'Tr·∫ßn th·∫°ch cao', 'C·ª≠a ƒëi'],
            icon: 'fas fa-paint-roller'
        },
        {
            category: 'Ph√≠ Kh√°c',
            percentage: '10-15%',
            items: ['Qu·∫£n l√Ω', 'L·ª£i nhu·∫≠n', 'D·ª± ph√≤ng'],
            icon: 'fas fa-percentage'
        }
    ];

    // Price factors
    const priceFactors = [
        {
            factor: 'Di·ªán T√≠ch',
            impact: 'Cao',
            description: 'Di·ªán t√≠ch c√†ng l·ªõn, chi ph√≠/m¬≤ gi·∫£m do hi·ªáu qu·∫£ quy m√¥',
            icon: 'fas fa-expand-arrows-alt'
        },
        {
            factor: 'V·∫≠t Li·ªáu',
            impact: 'R·∫•t cao',
            description: 'Ch·∫•t l∆∞·ª£ng v·∫≠t li·ªáu ·∫£nh h∆∞·ªüng 40-50% t·ªïng chi ph√≠',
            icon: 'fas fa-box-open'
        },
        {
            factor: 'Thi·∫øt K·∫ø',
            impact: 'Trung b√¨nh',
            description: 'Thi·∫øt k·∫ø ph·ª©c t·∫°p l√†m tƒÉng 10-20% chi ph√≠',
            icon: 'fas fa-drafting-compass'
        },
        {
            factor: 'V·ªã Tr√≠',
            impact: 'Trung b√¨nh',
            description: 'V·ªã tr√≠ kh√≥ ti·∫øp c·∫≠n tƒÉng chi ph√≠ v·∫≠n chuy·ªÉn v√† thi c√¥ng',
            icon: 'fas fa-map-marker-alt'
        },
        {
            factor: 'Th·ªùi Gian',
            impact: 'Cao',
            description: 'Thi c√¥ng g·∫•p c√≥ th·ªÉ tƒÉng 15-25% chi ph√≠',
            icon: 'fas fa-clock'
        }
    ];

    // FAQ data
    const faqData = [
        {
            question: 'Chi ph√≠ s·ª≠a ch·ªØa c·∫£i t·∫°o nh√† bao nhi√™u ti·ªÅn 1m¬≤?',
            answer: 'Chi ph√≠ dao ƒë·ªông t·ª´ 800,000 - 4,000,000 VNƒê/m¬≤ t√πy m·ª©c ƒë·ªô s·ª≠a ch·ªØa. S·ª≠a ch·ªØa c∆° b·∫£n 800K-1.5M/m¬≤, c·∫£i t·∫°o trung b√¨nh 1.5M-2.5M/m¬≤, c·∫£i t·∫°o to√†n di·ªán 2.5M-4M/m¬≤. Gi√° c·ª• th·ªÉ ph·ª• thu·ªôc v√†o di·ªán t√≠ch, v·∫≠t li·ªáu v√† y√™u c·∫ßu thi·∫øt k·∫ø.'
        },
        {
            question: 'C√°ch t√≠nh chi ph√≠ c·∫£i t·∫°o nh√† ch√≠nh x√°c nh·∫•t?',
            answer: 'C√°ch t√≠nh ch√≠nh x√°c: (1) ƒêo di·ªán t√≠ch c·∫ßn c·∫£i t·∫°o, (2) Li·ªát k√™ h·∫°ng m·ª•c c√¥ng vi·ªác, (3) T√≠nh kh·ªëi l∆∞·ª£ng v·∫≠t li·ªáu, (4) T√≠nh nh√¢n c√¥ng, (5) C·ªông chi ph√≠ qu·∫£n l√Ω 10-15%. N√™n c√≥ b√°o gi√° chi ti·∫øt t·ª´ 2-3 ƒë∆°n v·ªã ƒë·ªÉ so s√°nh.'
        },
        {
            question: 'Chi ph√≠ ph√° d·ª° chi·∫øm bao nhi√™u % t·ªïng chi ph√≠?',
            answer: 'Chi ph√≠ ph√° d·ª° v√† chu·∫©n b·ªã m·∫∑t b·∫±ng chi·∫øm kho·∫£ng 10-15% t·ªïng chi ph√≠ c·∫£i t·∫°o. Bao g·ªìm: ph√° d·ª° t∆∞·ªùng c≈©, d·ªçn d·∫πp r√°c th·∫£i, b·∫£o v·ªá kh√¥ng gian kh√°c kh√¥ng thi c√¥ng.'
        },
        {
            question: 'C√≥ c√°ch n√†o ti·∫øt ki·ªám chi ph√≠ c·∫£i t·∫°o kh√¥ng?',
            answer: 'C√≥ nhi·ªÅu c√°ch ti·∫øt ki·ªám: (1) Gi·ªØ l·∫°i k·∫øt c·∫•u c≈© n·∫øu c√≤n t·ªët, (2) Ch·ªçn v·∫≠t li·ªáu ph√π h·ª£p thay v√¨ qu√° cao c·∫•p, (3) T·ª± mua v·∫≠t li·ªáu, (4) Thi c√¥ng t·ª´ng giai ƒëo·∫°n, (5) T√¨m th·ª£ c√≥ kinh nghi·ªám tr√°nh sai s√≥t.'
        },
        {
            question: 'Th·ªùi gian c·∫£i t·∫°o nh√† m·∫•t bao l√¢u?',
            answer: 'Th·ªùi gian c·∫£i t·∫°o ph·ª• thu·ªôc di·ªán t√≠ch v√† m·ª©c ƒë·ªô: CƒÉn 50m¬≤ s·ª≠a c∆° b·∫£n 15-20 ng√†y, c·∫£i t·∫°o trung b√¨nh 30-45 ng√†y, c·∫£i t·∫°o to√†n di·ªán 60-90 ng√†y. Nh√† l·ªõn h∆°n 100m¬≤ c·∫ßn 90-150 ng√†y.'
        },
        {
            question: 'Chi ph√≠ n√†o hay ph√°t sinh khi c·∫£i t·∫°o?',
            answer: 'Chi ph√≠ ph√°t sinh th∆∞·ªùng g·∫∑p: (1) K·∫øt c·∫•u c≈© h∆∞ h·ªèng n·∫∑ng h∆°n d·ª± ki·∫øn, (2) Thay ƒë·ªïi thi·∫øt k·∫ø gi·ªØa ch·ª´ng, (3) V·∫≠t li·ªáu tƒÉng gi√°, (4) Ph√°t hi·ªán m·ªëi m·ªçt ho·∫∑c th·∫•m, (5) N√¢ng c·∫•p th√™m ti·ªán √≠ch. N√™n d·ª± ph√≤ng 10-15% t·ªïng chi ph√≠.'
        }
    ];

    return (
        <div className="pricing-page">
            {/* Hero Section */}
            <section className="hero-section">
                <div className="container">
                    <h1 className="section-title">üí∞ C√°ch ∆Ø·ªõc T√≠nh Chi Ph√≠ S·ª≠a Ch·ªØa C·∫£i T·∫°o</h1>
                    <p className="section-subtitle">
                        H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch t√≠nh to√°n chi ph√≠ c·∫£i t·∫°o ch√≠nh x√°c, minh b·∫°ch
                    </p>

                    <div className="hero-stats grid-4">
                        <div className="stat-item">
                            <div className="stat-number">5</div>
                            <div className="stat-label">B∆∞·ªõc T√≠nh Chi Ph√≠</div>
                        </div>
                        <div className="stat-item">
                            <div className="stat-number">10-15%</div>
                            <div className="stat-label">D·ª± Ph√≤ng Khuy·∫øn Ngh·ªã</div>
                        </div>
                        <div className="stat-item">
                            <div className="stat-number">2-3</div>
                            <div className="stat-label">B√°o Gi√° N√™n So S√°nh</div>
                        </div>
                        <div className="stat-item">
                            <div className="stat-number">24h</div>
                            <div className="stat-label">Th·ªùi Gian B√°o Gi√°</div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Pricing Tabs */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üìä M·ª©c Gi√° Theo Ph√¢n Kh√∫c</h2>
                    <p className="section-subtitle">
                        3 ph√¢n kh√∫c gi√° ph·ªï bi·∫øn cho s·ª≠a ch·ªØa c·∫£i t·∫°o nh√† ·ªü
                    </p>

                    <div className="tabs-container">
                        <div className="tabs">
                            {costMethods.map((method) => (
                                <button
                                    key={method.id}
                                    className={`tab ${activeTab === method.id ? 'active' : ''}`}
                                    onClick={() => setActiveTab(method.id)}
                                >
                                    {method.name}
                                </button>
                            ))}
                        </div>

                        {costMethods.map((method) => (
                            <div
                                key={method.id}
                                className={`tab-content ${activeTab === method.id ? 'active' : ''}`}
                            >
                                <div className="pricing-card card">
                                    <div className="card-header" style={{ background: `linear-gradient(135deg, ${method.bgColor}, ${method.bgColor}dd)` }}>
                                        <h3>{method.name}</h3>
                                        <div className="price-range">{method.price}</div>
                                        <p>{method.description}</p>
                                    </div>

                                    <div className="card-body">
                                        <div className="features-section">
                                            <h4>üî® C√¥ng Vi·ªác Bao G·ªìm:</h4>
                                            <ul>
                                                {method.features.map((feature, index) => (
                                                    <li key={index}>
                                                        <i className="fas fa-check-circle"></i>
                                                        {feature}
                                                    </li>
                                                ))}
                                            </ul>
                                        </div>

                                        <div className="includes-section">
                                            <h4>üì¶ G√≥i D·ªãch V·ª•:</h4>
                                            <ul>
                                                {method.includes.map((item, index) => (
                                                    <li key={index}>
                                                        <i className="fas fa-box"></i>
                                                        {item}
                                                    </li>
                                                ))}
                                            </ul>
                                        </div>
                                    </div>

                                    <div className="pricing-actions">
                                        <a href="/lien-he" className="btn btn-primary">
                                            <i className="fas fa-phone"></i>
                                            Li√™n H·ªá B√°o Gi√°
                                        </a>
                                        <a href="/bao-gia/bao-gia-sua-chua-cai-tao" className="btn btn-secondary">
                                            <i className="fas fa-calculator"></i>
                                            T√≠nh Chi Ph√≠
                                        </a>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Calculation Process */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üìù Quy Tr√¨nh T√≠nh Chi Ph√≠</h2>
                    <p className="section-subtitle">
                        5 b∆∞·ªõc t√≠nh to√°n chi ph√≠ c·∫£i t·∫°o ch√≠nh x√°c
                    </p>

                    <div className="process-timeline">
                        {calculationSteps.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">
                                    <i className={step.icon}></i>
                                    <span>{step.step}</span>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-duration">
                                        <i className="far fa-clock"></i>
                                        {step.duration}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Cost Breakdown */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üíµ C∆° C·∫•u Chi Ph√≠</h2>
                    <p className="section-subtitle">
                        Ph√¢n b·ªï chi ph√≠ theo t·ª´ng h·∫°ng m·ª•c c√¥ng vi·ªác
                    </p>

                    <div className="breakdown-grid grid-3">
                        {costBreakdown.map((item, index) => (
                            <div key={index} className="breakdown-card card">
                                <div className="card-header">
                                    <i className={`${item.icon} icon-large`}></i>
                                    <h3>{item.category}</h3>
                                    <div className="percentage">{item.percentage}</div>
                                </div>

                                <div className="card-body">
                                    <ul>
                                        {item.items.map((subItem, subIndex) => (
                                            <li key={subIndex}>
                                                <i className="fas fa-angle-right"></i>
                                                {subItem}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Price Factors */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üìà Y·∫øu T·ªë ·∫¢nh H∆∞·ªüng Gi√°</h2>
                    <p className="section-subtitle">
                        5 y·∫øu t·ªë ch√≠nh quy·∫øt ƒë·ªãnh chi ph√≠ c·∫£i t·∫°o
                    </p>

                    <div className="factors-grid grid-3">
                        {priceFactors.map((item, index) => (
                            <div key={index} className="factor-card card">
                                <div className="card-header">
                                    <i className={`${item.icon} icon-large`}></i>
                                    <h3>{item.factor}</h3>
                                    <div className={`impact impact-${item.impact.toLowerCase().replace(' ', '-')}`}>
                                        {item.impact}
                                    </div>
                                </div>

                                <div className="card-body">
                                    <p>{item.description}</p>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>

                    <div className="faq-list">
                        {faqData.map((faq, index) => (
                            <div key={index} className="faq-item">
                                <button
                                    className={`faq-question ${activeFaq === index ? 'active' : ''}`}
                                    onClick={() => setActiveFaq(activeFaq === index ? null : index)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                </button>

                                {activeFaq === index && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default CachUocTinhChiPhi;
