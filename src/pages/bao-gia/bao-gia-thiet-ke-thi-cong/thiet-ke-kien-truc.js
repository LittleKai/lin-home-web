// src/pages/bao-gia/bao-gia-thiet-ke-thi-cong/thiet-ke-kien-truc.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../thiet-ke/ThietKePage.css';
import '../BaoGiaThietKeThiCongNha.css';

const ThietKeKienTrucPricingPage = () => {
    const [activeTab, setActiveTab] = useState('basic');
    const [activeFaq, setActiveFaq] = useState(null);

    // Pricing packages for architectural design
    const designPackages = [
        {
            id: 'basic',
            name: 'G√≥i C∆° B·∫£n',
            price: '80,000 - 120,000 VNƒê/m¬≤',
            description: 'Thi·∫øt k·∫ø ki·∫øn tr√∫c c∆° b·∫£n cho nh√† ph·ªë, nh√† c·∫•p 4',
            features: [
                'B·∫£n v·∫Ω m·∫∑t b·∫±ng t·ªïng th·ªÉ',
                'M·∫∑t ƒë·ª©ng 4 h∆∞·ªõng',
                'M·∫∑t c·∫Øt c∆° b·∫£n',
                'Ph·ªëi c·∫£nh 3D (2-3 g√≥c)',
                'B·∫£n v·∫Ω k·∫øt c·∫•u ƒë∆°n gi·∫£n',
                'H·ªó tr·ª£ th·ªß t·ª•c xin ph√©p'
            ],
            suitable: ['Nh√† ph·ªë 3-4 t·∫ßng', 'Nh√† c·∫•p 4', 'Ki·∫øn tr√∫c ƒë∆°n gi·∫£n'],
            bgColor: '#10b981'
        },
        {
            id: 'premium',
            name: 'G√≥i Cao C·∫•p',
            price: '150,000 - 250,000 VNƒê/m¬≤',
            description: 'Thi·∫øt k·∫ø chi ti·∫øt cho bi·ªát th·ª±, nh√† ph·ªë cao c·∫•p',
            features: [
                'B·∫£n v·∫Ω ki·∫øn tr√∫c ho√†n ch·ªânh',
                'Thi·∫øt k·∫ø n·ªôi th·∫•t c∆° b·∫£n',
                'Ph·ªëi c·∫£nh 3D ch·∫•t l∆∞·ª£ng cao (5-8 g√≥c)',
                'B·∫£n v·∫Ω k·∫øt c·∫•u chi ti·∫øt',
                'Video walkthrough 3D',
                'S·ª≠a ƒë·ªïi t·ªëi ƒëa 3 l·∫ßn',
                'Gi√°m s√°t thi c√¥ng'
            ],
            suitable: ['Bi·ªát th·ª±', 'Nh√† ph·ªë cao c·∫•p', 'Villa', 'Shophouse'],
            bgColor: '#667eea'
        },
        {
            id: 'luxury',
            name: 'G√≥i Sang Tr·ªçng',
            price: '300,000 - 450,000 VNƒê/m¬≤',
            description: 'Thi·∫øt k·∫ø ƒë·∫≥ng c·∫•p cho l√¢u ƒë√†i, bi·ªát th·ª± luxury',
            features: [
                'Thi·∫øt k·∫ø ki·∫øn tr√∫c ƒë·ªôc quy·ªÅn',
                'Thi·∫øt k·∫ø n·ªôi th·∫•t ho√†n ch·ªânh',
                'Thi·∫øt k·∫ø s√¢n v∆∞·ªùn c·∫£nh quan',
                'Ph·ªëi c·∫£nh 3D si√™u ch·∫•t l∆∞·ª£ng (10+ g√≥c)',
                'Video 4K walkthrough',
                'M√¥ h√¨nh 3D v·∫≠t l√Ω',
                'S·ª≠a ƒë·ªïi kh√¥ng gi·ªõi h·∫°n',
                'Gi√°m s√°t thi c√¥ng to√†n di·ªán'
            ],
            suitable: ['Bi·ªát th·ª± luxury', 'L√¢u ƒë√†i', 'Resort', 'Kh√°ch s·∫°n boutique'],
            bgColor: '#f59e0b'
        }
    ];

    // Design process
    const designProcess = [
        {
            step: 1,
            title: 'T∆∞ v·∫•n & Kh·∫£o s√°t',
            description: 'T√¨m hi·ªÉu nhu c·∫ßu, s·ªü th√≠ch v√† ƒëi·ªÅu ki·ªán th·ª±c t·∫ø',
            details: [
                'G·∫∑p m·∫∑t t∆∞ v·∫•n tr·ª±c ti·∫øp',
                'Kh·∫£o s√°t ƒë·ªãa h√¨nh, h∆∞·ªõng nh√†',
                'Ph√¢n t√≠ch phong th·ªßy c∆° b·∫£n',
                'X√°c ƒë·ªãnh ng√¢n s√°ch v√† timeline'
            ],
            duration: '1-2 ng√†y',
            icon: 'fas fa-users'
        },
        {
            step: 2,
            title: '√ù t∆∞·ªüng & Concept',
            description: 'Ph√°t tri·ªÉn √Ω t∆∞·ªüng thi·∫øt k·∫ø ban ƒë·∫ßu',
            details: [
                'Sketch √Ω t∆∞·ªüng s∆° b·ªô',
                'X√°c ƒë·ªãnh phong c√°ch ki·∫øn tr√∫c',
                'Ph√¢n b·ªï c√¥ng nƒÉng kh√¥ng gian',
                'Thuy·∫øt tr√¨nh concept'
            ],
            duration: '3-5 ng√†y',
            icon: 'far fa-lightbulb'
        },
        {
            step: 3,
            title: 'Thi·∫øt k·∫ø S∆° b·ªô',
            description: 'Ho√†n thi·ªán b·∫£n v·∫Ω ki·∫øn tr√∫c chi ti·∫øt',
            details: [
                'B·∫£n v·∫Ω m·∫∑t b·∫±ng c√°c t·∫ßng',
                'M·∫∑t ƒë·ª©ng 4 h∆∞·ªõng',
                'M·∫∑t c·∫Øt ngang, d·ªçc',
                'Thuy·∫øt tr√¨nh v√† ƒëi·ªÅu ch·ªânh'
            ],
            duration: '7-10 ng√†y',
            icon: 'fas fa-compass'
        },
        {
            step: 4,
            title: 'Ph·ªëi c·∫£nh 3D',
            description: 'T·∫°o h√¨nh ·∫£nh 3D ch√¢n th·ª±c',
            details: [
                'Modeling 3D chi ti·∫øt',
                'Render ch·∫•t l∆∞·ª£ng cao',
                'Ph·ªëi c·∫£nh ngo·∫°i th·∫•t',
                'Video walkthrough (t√πy g√≥i)'
            ],
            duration: '5-7 ng√†y',
            icon: 'fas fa-cube'
        },
        {
            step: 5,
            title: 'Ho√†n thi·ªán & B√†n giao',
            description: 'Ch·ªânh s·ª≠a cu·ªëi c√πng v√† b√†n giao h·ªì s∆°',
            details: [
                'S·ª≠a ƒë·ªïi theo g√≥p √Ω',
                'Ho√†n thi·ªán b·ªô h·ªì s∆°',
                'H∆∞·ªõng d·∫´n ƒë·ªçc b·∫£n v·∫Ω',
                'H·ªó tr·ª£ th·ªß t·ª•c xin ph√©p'
            ],
            duration: '2-3 ng√†y',
            icon: 'fas fa-check-circle'
        }
    ];

    // FAQ data
    const faqData = [
        {
            id: 1,
            question: 'Th·ªùi gian thi·∫øt k·∫ø m·∫•t bao l√¢u?',
            answer: 'T√πy theo quy m√¥ v√† ƒë·ªô ph·ª©c t·∫°p: Nh√† ph·ªë c∆° b·∫£n 15-20 ng√†y, bi·ªát th·ª± 25-35 ng√†y, d·ª± √°n l·ªõn 45-60 ng√†y.'
        },
        {
            id: 2,
            question: 'C√≥ ƒë∆∞·ª£c s·ª≠a ƒë·ªïi thi·∫øt k·∫ø kh√¥ng?',
            answer: 'C√≥, m·ªói g√≥i c√≥ s·ªë l·∫ßn s·ª≠a ƒë·ªïi kh√°c nhau. G√≥i c∆° b·∫£n: 2 l·∫ßn, g√≥i cao c·∫•p: 3 l·∫ßn, g√≥i sang tr·ªçng: kh√¥ng gi·ªõi h·∫°n.'
        },
        {
            id: 3,
            question: 'Chi ph√≠ c√≥ bao g·ªìm th·ªß t·ª•c xin ph√©p kh√¥ng?',
            answer: 'G√≥i c∆° b·∫£n h·ªó tr·ª£ chu·∫©n b·ªã h·ªì s∆°, g√≥i cao c·∫•p v√† sang tr·ªçng bao g·ªìm ho√†n to√†n th·ªß t·ª•c xin ph√©p.'
        },
        {
            id: 4,
            question: 'C√≥ thi·∫øt k·∫ø n·ªôi th·∫•t kh√¥ng?',
            answer: 'G√≥i c∆° b·∫£n kh√¥ng c√≥, g√≥i cao c·∫•p c√≥ thi·∫øt k·∫ø n·ªôi th·∫•t c∆° b·∫£n, g√≥i sang tr·ªçng c√≥ thi·∫øt k·∫ø n·ªôi th·∫•t ho√†n ch·ªânh.'
        },
        {
            id: 5,
            question: 'Thanh to√°n nh∆∞ th·∫ø n√†o?',
            answer: 'Chia 3 ƒë·ª£t: 40% khi k√Ω h·ª£p ƒë·ªìng, 40% khi ho√†n th√†nh thi·∫øt k·∫ø s∆° b·ªô, 20% khi b√†n giao ho√†n ch·ªânh.'
        }
    ];

    const toggleFaq = (id) => {
        setActiveFaq(activeFaq === id ? null : id);
    };

    return (
        <div className="thiet-ke-page">
            {/* Pricing Packages */}
            <section className="pricing-section">
                <div className="container">
                    <div className="section-header">
                        <h2>üéØ B·∫£ng Gi√° Thi·∫øt K·∫ø Ki·∫øn Tr√∫c 2025</h2>
                        <p>L·ª±a ch·ªçn g√≥i thi·∫øt k·∫ø ph√π h·ª£p v·ªõi nhu c·∫ßu v√† ng√¢n s√°ch c·ªßa b·∫°n</p>
                    </div>

                    <div className="package-tabs">
                        {designPackages.map(pkg => (
                            <button
                                key={pkg.id}
                                className={`package-tab ${activeTab === pkg.id ? 'active' : ''}`}
                                onClick={() => setActiveTab(pkg.id)}
                            >
                                {pkg.name}
                            </button>
                        ))}
                    </div>

                    {designPackages.map(pkg => (
                        activeTab === pkg.id && (
                            <div key={pkg.id} className="package-content">
                                <div className="package-info" style={{ borderColor: pkg.bgColor }}>
                                    <div className="package-header" style={{ background: pkg.bgColor }}>
                                        <h3>{pkg.name}</h3>
                                        <div className="package-price">{pkg.price}</div>
                                        <p>{pkg.description}</p>
                                    </div>

                                    <div className="package-body">
                                        <div className="features-grid">
                                            <div className="features-column">
                                                <h4>‚ú® Bao g·ªìm d·ªãch v·ª•:</h4>
                                                <ul>
                                                    {pkg.features.map((feature, index) => (
                                                        <li key={index}>{feature}</li>
                                                    ))}
                                                </ul>
                                            </div>

                                            <div className="features-column">
                                                <h4>üè† Ph√π h·ª£p cho:</h4>
                                                <ul>
                                                    {pkg.suitable.map((item, index) => (
                                                        <li key={index}>{item}</li>
                                                    ))}
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        )
                    ))}
                </div>
            </section>

            {/* Design Process */}
            <section className="process-section">
                <div className="container">
                    <div className="section-header">
                        <h2>üîÑ Quy Tr√¨nh Thi·∫øt K·∫ø Ki·∫øn Tr√∫c</h2>
                        <p>5 b∆∞·ªõc thi·∫øt k·∫ø chuy√™n nghi·ªáp t·ª´ √Ω t∆∞·ªüng ƒë·∫øn hi·ªán th·ª±c</p>
                    </div>

                    <div className="process-timeline">
                        {designProcess.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">{step.step}</div>
                                <div className="step-icon">
                                    <i className={step.icon}></i>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-details">
                                        <ul>
                                            {step.details.map((detail, detailIndex) => (
                                                <li key={detailIndex}>{detail}</li>
                                            ))}
                                        </ul>
                                    </div>
                                    <div className="step-meta">
                                        <span className="step-duration">
                                            <i className="far fa-clock"></i> {step.duration}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="faq-section">
                <div className="container">
                    <div className="section-header">
                        <h2>‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>
                        <p>Gi·∫£i ƒë√°p nh·ªØng th·∫Øc m·∫Øc v·ªÅ d·ªãch v·ª• thi·∫øt k·∫ø ki·∫øn tr√∫c</p>
                    </div>

                    <div className="faq-container">
                        {faqData.map(faq => (
                            <div key={faq.id} className="faq-item">
                                <div
                                    className={`faq-question ${activeFaq === faq.id ? 'active' : ''}`}
                                    onClick={() => toggleFaq(faq.id)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === faq.id ? 'up' : 'down'}`}></i>
                                </div>
                                {activeFaq === faq.id && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default ThietKeKienTrucPricingPage;