// src/pages/bao-gia/bao-gia-thi-cong-hang-muc/cua-composite.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../../styles/CommonStyles.css';
import '../BaoGiaThiCongHangMuc.css';

const CuaCompositePage = () => {
    const [activeTab, setActiveTab] = useState('standard');
    const [activeFaq, setActiveFaq] = useState(null);

    // Pricing data for composite doors
    const doorTypes = [
        {
            id: 'standard',
            name: 'C·ª≠a Composite Ti√™u Chu·∫©n',
            price: '1,800,000 - 2,800,000 VNƒê/c√°nh',
            description: 'C·ª≠a composite ph·ªß film PVC, ch·ªëng n∆∞·ªõc t·ªët',
            features: [
                'C·ªët composite ch·ªëng n∆∞·ªõc',
                'Ph·ªß film PVC v√¢n g·ªó',
                'Khung c·ª≠a MDF ch·ªëng ·∫©m',
                'Kh√≥a tay g·∫°t cao c·∫•p',
                'B·∫£o h√†nh 12-18 th√°ng'
            ],
            sizes: [
                { size: '70cm x 200cm', price: '1,800,000 - 2,200,000 VNƒê' },
                { size: '80cm x 200cm', price: '2,000,000 - 2,400,000 VNƒê' },
                { size: '90cm x 200cm', price: '2,200,000 - 2,800,000 VNƒê' }
            ],
            bgColor: '#dc2626'
        },
        {
            id: 'premium',
            name: 'C·ª≠a Composite Cao C·∫•p',
            price: '2,800,000 - 4,200,000 VNƒê/c√°nh',
            description: 'C·ª≠a composite ph·ªß melamin, thi·∫øt k·∫ø hi·ªán ƒë·∫°i',
            features: [
                'C·ªët composite cao c·∫•p',
                'Ph·ªß melamin ch·ªëng tr·∫ßy',
                'Thi·∫øt k·∫ø t·∫°o h√¨nh ƒë·∫∑c bi·ªát',
                'Ph·ª• ki·ªán nh·∫≠p kh·∫©u',
                'B·∫£o h√†nh 18-24 th√°ng'
            ],
            sizes: [
                { size: '70cm x 200cm', price: '2,800,000 - 3,400,000 VNƒê' },
                { size: '80cm x 200cm', price: '3,200,000 - 3,800,000 VNƒê' },
                { size: '90cm x 200cm', price: '3,600,000 - 4,200,000 VNƒê' }
            ],
            bgColor: '#8b5cf6'
        },
        {
            id: 'luxury',
            name: 'C·ª≠a Composite Luxury',
            price: '4,000,000 - 4,500,000 VNƒê/c√°nh',
            description: 'C·ª≠a composite s∆°n PU, ch·∫•t l∆∞·ª£ng nh∆∞ g·ªó t·ª± nhi√™n',
            features: [
                'C·ªët composite ƒë·∫∑c bi·ªát',
                'S∆°n PU cao c·∫•p 5 l·ªõp',
                'T·∫°o h√¨nh ngh·ªá thu·∫≠t',
                'Ph·ª• ki·ªán luxury ch√¢u √Çu',
                'B·∫£o h√†nh 24-36 th√°ng'
            ],
            sizes: [
                { size: '70cm x 200cm', price: '4,000,000 - 4,500,000 VNƒê' },
                { size: '80cm x 200cm', price: '4,200,000 - 4,800,000 VNƒê' },
                { size: '90cm x 200cm', price: '4,500,000 - 5,200,000 VNƒê' }
            ],
            bgColor: '#059669'
        }
    ];

    // Advantages comparison
    const materialComparison = [
        {
            material: 'C·ª≠a Composite',
            pros: ['Ch·ªëng n∆∞·ªõc 100%', 'Kh√¥ng cong v√™nh', 'Gi√° h·ª£p l√Ω', 'B·∫£o d∆∞·ª°ng √≠t'],
            cons: ['ƒê·ªô sang tr·ªçng ch∆∞a b·∫±ng g·ªó', 'C√°ch √¢m trung b√¨nh'],
            rating: 4.5,
            price: '1.8 - 5.2 tri·ªáu/c√°nh'
        },
        {
            material: 'C·ª≠a G·ªó T·ª± Nhi√™n',
            pros: ['Sang tr·ªçng cao', 'C√°ch √¢m t·ªët', 'T·ª± nhi√™n', 'C√≥ th·ªÉ s·ª≠a ch·ªØa'],
            cons: ['S·ª£ n∆∞·ªõc', 'D·ªÖ cong v√™nh', 'Gi√° cao', 'C·∫ßn b·∫£o d∆∞·ª°ng nhi·ªÅu'],
            rating: 4,
            price: '3 - 15 tri·ªáu/c√°nh'
        },
        {
            material: 'C·ª≠a Nh√¥m K√≠nh',
            pros: ['Ch·ªëng n∆∞·ªõc', '√Ånh s√°ng t·ª± nhi√™n', 'Hi·ªán ƒë·∫°i', 'B·ªÅn l√¢u'],
            cons: ['C√°ch √¢m k√©m', 'Thi·∫øu ri√™ng t∆∞', 'L·∫°nh v·ªÅ m√πa ƒë√¥ng'],
            rating: 3.5,
            price: '2.5 - 8 tri·ªáu/c√°nh'
        }
    ];

    // Installation process
    const installationSteps = [
        {
            step: 1,
            title: 'ƒêo ƒê·∫°c √î Ch·ªù',
            description: 'ƒêo ch√≠nh x√°c k√≠ch th∆∞·ªõc √¥ c·ª≠a, ki·ªÉm tra vu√¥ng g√≥c',
            duration: '0.5 ng√†y',
            icon: 'fas fa-ruler'
        },
        {
            step: 2,
            title: 'Gia C√¥ng C·ª≠a',
            description: 'Gia c√¥ng c·ª≠a theo k√≠ch th∆∞·ªõc, l·∫Øp ph·ª• ki·ªán',
            duration: '2-3 ng√†y',
            icon: 'fas fa-tools'
        },
        {
            step: 3,
            title: 'Chu·∫©n B·ªã L·∫Øp ƒê·∫∑t',
            description: 'X·ª≠ l√Ω √¥ ch·ªù, chu·∫©n b·ªã v·∫≠t li·ªáu l·∫Øp ƒë·∫∑t',
            duration: '0.5 ng√†y',
            icon: 'fas fa-hammer'
        },
        {
            step: 4,
            title: 'L·∫Øp ƒê·∫∑t C·ª≠a',
            description: 'L·∫Øp khung c·ª≠a, c√¢n ch·ªânh, ki·ªÉm tra ƒë·ªô k√≠n',
            duration: '1 ng√†y',
            icon: 'fas fa-door-open'
        },
        {
            step: 5,
            title: 'Ho√†n Thi·ªán',
            description: 'ƒêi·ªÅu ch·ªânh cu·ªëi, v·ªá sinh, b√†n giao',
            duration: '0.5 ng√†y',
            icon: 'fas fa-check'
        }
    ];

    // Usage tips
    const usageTips = [
        {
            category: 'S·ª≠ d·ª•ng ƒë√∫ng c√°ch',
            icon: 'fas fa-hand-point-right',
            tips: [
                'ƒê√≥ng m·ªü nh·∫π nh√†ng, kh√¥ng d√πng l·ª±c',
                'Tr√°nh va ƒë·∫≠p m·∫°nh v√†o c·ª≠a',
                'Kh√¥ng treo v·∫≠t n·∫∑ng l√™n c·ª≠a',
                'Ki·ªÉm tra ƒë·ªô k√≠n ƒë·ªãnh k·ª≥'
            ]
        },
        {
            category: 'V·ªá sinh & b·∫£o d∆∞·ª°ng',
            icon: 'fas fa-spray-can',
            tips: [
                'Lau ch√πi b·∫±ng khƒÉn ·∫©m',
                'D√πng n∆∞·ªõc s·∫°ch, tr√°nh h√≥a ch·∫•t m·∫°nh',
                'B√¥i tr√¥n b·∫£n l·ªÅ 6 th√°ng/l·∫ßn',
                'Ki·ªÉm tra kh√≥a c·ª≠a ƒë·ªãnh k·ª≥'
            ]
        },
        {
            category: 'X·ª≠ l√Ω s·ª± c·ªë',
            icon: 'fas fa-wrench',
            tips: [
                'C·ª≠a s·ªánh: ƒëi·ªÅu ch·ªânh b·∫£n l·ªÅ',
                'Kh√≥a kh√≥: b√¥i tr√¥n cylinder',
                'Khe h·ªü l·ªõn: ƒëi·ªÅu ch·ªânh khung',
                'Li√™n h·ªá th·ª£ khi c·∫ßn thi·∫øt'
            ]
        }
    ];

    // FAQ data
    const faqData = [
        {
            question: 'C·ª≠a composite c√≥ th·∫≠t s·ª± ch·ªëng n∆∞·ªõc 100%?',
            answer: 'ƒê√∫ng, c·ªët composite l√†m t·ª´ b·ªôt g·ªó v√† nh·ª±a PVC n√™n ch·ªëng n∆∞·ªõc tuy·ªát ƒë·ªëi, kh√¥ng b·ªã cong v√™nh hay m·ªëc m·ªçt nh∆∞ g·ªó t·ª± nhi√™n. Th√≠ch h·ª£p cho v√πng ·∫©m ∆∞·ªõt.'
        },
        {
            question: 'Th·ªùi gian b·∫£o h√†nh c·ª≠a composite bao l√¢u?',
            answer: 'C·ª≠a composite ti√™u chu·∫©n: 12-18 th√°ng. C·ª≠a cao c·∫•p: 18-24 th√°ng. C·ª≠a luxury: 24-36 th√°ng. B·∫£o h√†nh bao g·ªìm cong v√™nh, bong tr√≥c, h·ªèng ph·ª• ki·ªán.'
        },
        {
            question: 'C·ª≠a composite c√≥ c√°ch √¢m t·ªët kh√¥ng?',
            answer: 'C√°ch √¢m ·ªü m·ª©c trung b√¨nh, kho·∫£ng 25-30dB. T·ªët h∆°n c·ª≠a nh√¥m k√≠nh nh∆∞ng ch∆∞a b·∫±ng c·ª≠a g·ªó t·ª± nhi√™n d√†y. Ph√π h·ª£p cho ph√≤ng ng·ªß, ph√≤ng l√†m vi·ªác gia ƒë√¨nh.'
        },
        {
            question: 'C√≥ th·ªÉ s·ª≠a ch·ªØa c·ª≠a composite khi b·ªã h·ªèng?',
            answer: 'C√≥ th·ªÉ s·ª≠a ch·ªØa nh·ªè nh∆∞ bong s∆°n, tr·∫ßy x∆∞·ªõc. V·ªõi h∆∞ h·ªèng l·ªõn th√¨ kh√≥ s·ª≠a v√† t·ªën k√©m. N√™n ch·ªçn s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng t·ª´ ƒë·∫ßu v√† s·ª≠ d·ª•ng ƒë√∫ng c√°ch.'
        }
    ];

    const currentDoor = doorTypes.find(type => type.id === activeTab);

    return (
        <div className="construction-detail-page">
            {/* Hero Section */}
            <section className="section section-gradient">
                <div className="container">
                    <div className="text-center">
                        <h1 className="section-title">
                            üö™ B√°o Gi√° Thi C√¥ng C·ª≠a Composite 2025
                        </h1>
                        <p className="section-subtitle">
                            B√°o gi√° chi ti·∫øt l·∫Øp ƒë·∫∑t c·ª≠a g·ªó nh·ª±a Composite 
                            t·∫°i H√† N·ªôi & Nha Trang. Ch·ªëng n∆∞·ªõc - B·ªÅn ƒë·∫πp - Gi√° t·ªët.
                        </p>
                        
                        <div className="hero-features grid-4">
                            <div className="feature-item">
                                <i className="fas fa-shield-alt"></i>
                                <span>Ch·ªëng N∆∞·ªõc 100%</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-leaf"></i>
                                <span>Th√¢n Thi·ªán M√¥i Tr∆∞·ªùng</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-palette"></i>
                                <span>ƒêa D·∫°ng M√†u S·∫Øc</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-dollar-sign"></i>
                                <span>Gi√° H·ª£p L√Ω</span>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Door Types */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üö™ Lo·∫°i C·ª≠a Composite & B√°o Gi√°</h2>
                    <p className="section-subtitle">
                        3 d√≤ng c·ª≠a composite ph√π h·ª£p m·ªçi nhu c·∫ßu v√† ng√¢n s√°ch
                    </p>

                    <div className="tabs">
                        {doorTypes.map(type => (
                            <button
                                key={type.id}
                                className={`tab ${activeTab === type.id ? 'active' : ''}`}
                                onClick={() => setActiveTab(type.id)}
                            >
                                {type.name}
                            </button>
                        ))}
                    </div>

                    {currentDoor && (
                        <div className="door-detail">
                            <div className="detail-header" style={{ background: `linear-gradient(135deg, ${currentDoor.bgColor}, ${currentDoor.bgColor}dd)` }}>
                                <h3>{currentDoor.name}</h3>
                                <div className="price-range">{currentDoor.price}</div>
                                <p>{currentDoor.description}</p>
                            </div>

                            <div className="detail-content grid-2">
                                <div className="features-section">
                                    <h4>‚ú® Bao g·ªìm:</h4>
                                    <ul className="features-list">
                                        {currentDoor.features.map((feature, index) => (
                                            <li key={index}>
                                                <i className="fas fa-check"></i>
                                                {feature}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="sizes-section">
                                    <h4>üìè K√≠ch th∆∞·ªõc & gi√°:</h4>
                                    <div className="sizes-list">
                                        {currentDoor.sizes.map((size, index) => (
                                            <div key={index} className="size-item">
                                                <div className="size-name">{size.size}</div>
                                                <div className="size-price">{size.price}</div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>

                            <div className="detail-actions">
                                <a href="/lien-he" className="btn btn-primary">
                                    <i className="fas fa-phone"></i>
                                    Li√™n H·ªá B√°o Gi√°
                                </a>
                                <a href="/bao-gia/tu-van-bao-gia" className="btn btn-secondary">
                                    <i className="fas fa-calculator"></i>
                                    T√≠nh Chi Ph√≠
                                </a>
                            </div>
                        </div>
                    )}
                </div>
            </section>

            {/* Material Comparison */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">‚öñÔ∏è So S√°nh V·∫≠t Li·ªáu C·ª≠a</h2>
                    <p className="section-subtitle">
                        So s√°nh ∆∞u nh∆∞·ª£c ƒëi·ªÉm c·ªßa c√°c lo·∫°i c·ª≠a ph·ªï bi·∫øn
                    </p>

                    <div className="comparison-grid grid-3">
                        {materialComparison.map((material, index) => (
                            <div key={index} className="comparison-card card">
                                <div className="card-header">
                                    <h3>{material.material}</h3>
                                    <div className="rating">
                                        {[...Array(5)].map((_, i) => (
                                            <i 
                                                key={i} 
                                                className={`fas fa-star ${i < Math.floor(material.rating) ? 'active' : ''}`}
                                            ></i>
                                        ))}
                                        <span>{material.rating}/5</span>
                                    </div>
                                    <div className="price-range">{material.price}</div>
                                </div>
                                <div className="card-body">
                                    <div className="pros-cons">
                                        <div className="pros">
                                            <h4>üëç ∆Øu ƒëi·ªÉm:</h4>
                                            <ul>
                                                {material.pros.map((pro, i) => (
                                                    <li key={i}>
                                                        <i className="fas fa-plus"></i>
                                                        {pro}
                                                    </li>
                                                ))}
                                            </ul>
                                        </div>
                                        <div className="cons">
                                            <h4>üëé Nh∆∞·ª£c ƒëi·ªÉm:</h4>
                                            <ul>
                                                {material.cons.map((con, i) => (
                                                    <li key={i}>
                                                        <i className="fas fa-minus"></i>
                                                        {con}
                                                    </li>
                                                ))}
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Installation Process */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üîß Quy Tr√¨nh L·∫Øp ƒê·∫∑t</h2>
                    <p className="section-subtitle">
                        5 b∆∞·ªõc l·∫Øp ƒë·∫∑t c·ª≠a composite chuy√™n nghi·ªáp
                    </p>

                    <div className="process-timeline">
                        {installationSteps.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">
                                    <i className={step.icon}></i>
                                    <span>{step.step}</span>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-duration">
                                        <i className="far fa-clock"></i>
                                        {step.duration}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Usage Tips */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üí° H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng & B·∫£o D∆∞·ª°ng</h2>
                    <p className="section-subtitle">
                        C√°ch s·ª≠ d·ª•ng v√† chƒÉm s√≥c c·ª≠a composite ƒë·ªÉ tƒÉng tu·ªïi th·ªç
                    </p>

                    <div className="tips-grid grid-3">
                        {usageTips.map((tip, index) => (
                            <div key={index} className="tip-card card">
                                <div className="card-header">
                                    <h3>
                                        <i className={tip.icon}></i>
                                        {tip.category}
                                    </h3>
                                </div>
                                <div className="card-body">
                                    <ul>
                                        {tip.tips.map((item, i) => (
                                            <li key={i}>
                                                <i className="fas fa-check-circle"></i>
                                                {item}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>
                    
                    <div className="faq-list">
                        {faqData.map((faq, index) => (
                            <div key={index} className="faq-item">
                                <button 
                                    className={`faq-question ${activeFaq === index ? 'active' : ''}`}
                                    onClick={() => setActiveFaq(activeFaq === index ? null : index)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                </button>
                                {activeFaq === index && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default CuaCompositePage;
