// src/pages/bao-gia/bao-gia-thi-cong-hang-muc/rem-cua-cao-cap.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../../styles/CommonStyles.css';

const RemCuaCaoCapPage = () => {
    const [activeTab, setActiveTab] = useState('fabric');
    const [activeFaq, setActiveFaq] = useState(null);

    // Curtain types
    const curtainTypes = [
        {
            id: 'fabric',
            name: 'R√®m V·∫£i Cao C·∫•p',
            price: '450,000 - 850,000 VNƒê/m¬≤',
            description: 'R√®m v·∫£i 2 l·ªõp ch·ªëng n·∫Øng, c√°ch nhi·ªát, c√°ch √¢m t·ªët',
            features: [
                'V·∫£i 2 l·ªõp ch·ªëng n·∫Øng 95%',
                'Ray tr∆∞·ª£t im l·∫∑ng ƒê·ª©c',
                'ƒêi·ªÅu khi·ªÉn t·ª´ xa',
                'B·∫£o h√†nh 18 th√°ng',
                'ƒêa d·∫°ng m√†u s·∫Øc',
                'D·ªÖ v·ªá sinh'
            ],
            materials: [
                { name: 'V·∫£i nhung cao c·∫•p', price: '650-850K', origin: 'H√†n Qu·ªëc' },
                { name: 'V·∫£i linen t·ª± nhi√™n', price: '550-750K', origin: 'Ch√¢u √Çu' },
                { name: 'V·∫£i blackout', price: '450-650K', origin: 'Vi·ªát Nam' }
            ],
            bgColor: '#8b5cf6'
        },
        {
            id: 'rainbow',
            name: 'R√®m C·∫ßu V·ªìng',
            price: '320,000 - 650,000 VNƒê/m¬≤',
            description: 'ƒêi·ªÅu ch·ªânh √°nh s√°ng linh ho·∫°t, ph√π h·ª£p vƒÉn ph√≤ng, chung c∆∞',
            features: [
                'ƒêi·ªÅu ch·ªânh √°nh s√°ng linh ho·∫°t',
                'V·∫£i ch·ªëng UV 70-85%',
                'L·∫Øp ƒë·∫∑t nhanh g·ªçn',
                'B·∫£o h√†nh 12 th√°ng',
                'Ti·∫øt ki·ªám kh√¥ng gian',
                'Gi√° c·∫£ h·ª£p l√Ω'
            ],
            materials: [
                { name: 'V·∫£i polyester', price: '320-450K', origin: 'Trung Qu·ªëc' },
                { name: 'V·∫£i screen cao c·∫•p', price: '480-580K', origin: 'H√†n Qu·ªëc' },
                { name: 'V·∫£i ch·ªëng ch√°y', price: '550-650K', origin: 'Nh·∫≠t B·∫£n' }
            ],
            bgColor: '#ec4899'
        },
        {
            id: 'smart',
            name: 'R√®m T·ª± ƒê·ªông Smarthome',
            price: '1,200,000 - 2,500,000 VNƒê/m¬≤',
            description: 'R√®m t·ª± ƒë·ªông ƒëi·ªÅu khi·ªÉn b·∫±ng app, h·∫πn gi·ªù th√¥ng minh',
            features: [
                'Motor Somfy ch√≠nh h√£ng',
                'App ƒëi·ªÅu khi·ªÉn iOS/Android',
                'H·∫πn gi·ªù t·ª± ƒë·ªông',
                'B·∫£o h√†nh 24 th√°ng',
                'T√≠ch h·ª£p Google/Alexa',
                'C·∫£m bi·∫øn √°nh s√°ng'
            ],
            materials: [
                { name: 'V·∫£i cao c·∫•p + Motor', price: '1,200-1,800K', origin: 'Ph√°p' },
                { name: 'Motor im l·∫∑ng', price: '1,500-2,000K', origin: 'ƒê·ª©c' },
                { name: 'C·∫£m bi·∫øn th√¥ng minh', price: '1,800-2,500K', origin: 'M·ªπ' }
            ],
            bgColor: '#3b82f6'
        }
    ];

    // Installation process
    const installationSteps = [
        {
            step: 1,
            title: 'Kh·∫£o S√°t & ƒêo ƒê·∫°c',
            description: 'ƒêo ch√≠nh x√°c c·ª≠a s·ªï, c·ª≠a ƒëi, t∆∞ v·∫•n lo·∫°i r√®m ph√π h·ª£p',
            duration: '0.5 ng√†y',
            icon: 'fas fa-ruler'
        },
        {
            step: 2,
            title: 'T∆∞ V·∫•n & Ch·ªçn M·∫´u',
            description: 'Ch·ªçn lo·∫°i r√®m, m√†u s·∫Øc, ch·∫•t li·ªáu ph√π h·ª£p phong c√°ch',
            duration: '1 ng√†y',
            icon: 'fas fa-palette'
        },
        {
            step: 3,
            title: 'Thi·∫øt K·∫ø & B√°o Gi√°',
            description: 'Thi·∫øt k·∫ø chi ti·∫øt, b√°o gi√° r√µ r√†ng t·ª´ng h·∫°ng m·ª•c',
            duration: '1-2 ng√†y',
            icon: 'fas fa-calculator'
        },
        {
            step: 4,
            title: 'Gia C√¥ng R√®m',
            description: 'Gia c√¥ng r√®m theo thi·∫øt k·∫ø, chu·∫©n b·ªã ph·ª• ki·ªán',
            duration: '3-7 ng√†y',
            icon: 'fas fa-cut'
        },
        {
            step: 5,
            title: 'L·∫Øp ƒê·∫∑t & B√†n Giao',
            description: 'Thi c√¥ng l·∫Øp ƒë·∫∑t t·∫°i c√¥ng tr√¨nh, ki·ªÉm tra ch·∫•t l∆∞·ª£ng',
            duration: '1 ng√†y',
            icon: 'fas fa-tools'
        }
    ];

    // Curtain features comparison
    const featureComparison = [
        {
            feature: 'Ch·ªëng N·∫Øng',
            fabric: '95%',
            rainbow: '70-85%',
            smart: '95%'
        },
        {
            feature: 'C√°ch √Çm',
            fabric: 'T·ªët',
            rainbow: 'Trung b√¨nh',
            smart: 'T·ªët'
        },
        {
            feature: 'ƒê·ªô B·ªÅn',
            fabric: '5-7 nƒÉm',
            rainbow: '3-5 nƒÉm',
            smart: '7-10 nƒÉm'
        },
        {
            feature: 'ƒêi·ªÅu Khi·ªÉn',
            fabric: 'Tay + Remote',
            rainbow: 'Tay',
            smart: 'App + Voice'
        },
        {
            feature: 'B·∫£o H√†nh',
            fabric: '18 th√°ng',
            rainbow: '12 th√°ng',
            smart: '24 th√°ng'
        }
    ];

    // Applications by space
    const applications = [
        {
            space: 'Ph√≤ng Ng·ªß',
            recommended: 'R√®m V·∫£i Blackout',
            reason: 'Ch·ªëng s√°ng t·ªëi ƒëa, c√°ch √¢m, ri√™ng t∆∞',
            price: '650-850K/m¬≤',
            icon: 'fas fa-bed'
        },
        {
            space: 'Ph√≤ng Kh√°ch',
            recommended: 'R√®m V·∫£i 2 L·ªõp',
            reason: 'Sang tr·ªçng, ƒëi·ªÅu ch·ªânh √°nh s√°ng linh ho·∫°t',
            price: '550-750K/m¬≤',
            icon: 'fas fa-couch'
        },
        {
            space: 'VƒÉn Ph√≤ng',
            recommended: 'R√®m C·∫ßu V·ªìng',
            reason: 'Ti·ªán l·ª£i, ti·∫øt ki·ªám, ch·ªëng ch√≥i',
            price: '400-600K/m¬≤',
            icon: 'fas fa-briefcase'
        },
        {
            space: 'Bi·ªát Th·ª±',
            recommended: 'R√®m T·ª± ƒê·ªông',
            reason: 'Hi·ªán ƒë·∫°i, ti·ªán nghi, t·ª± ƒë·ªông h√≥a',
            price: '1,500-2,500K/m¬≤',
            icon: 'fas fa-home'
        }
    ];

    // FAQ data
    const faqData = [
        {
            question: 'R√®m c√≥ ch·ªëng n·∫Øng hi·ªáu qu·∫£ kh√¥ng?',
            answer: 'R√®m blackout ch·ªëng n·∫Øng 95-99%, r√®m screen ch·ªëng 70-85% √°nh s√°ng v√† tia UV. T√πy ch·ªçn ph√π h·ª£p nhu c·∫ßu s·ª≠ d·ª•ng.'
        },
        {
            question: 'R√®m c√≥ b·ªÅn trong kh√≠ h·∫≠u nhi·ªát ƒë·ªõi?',
            answer: 'V·∫£i ch·∫•t l∆∞·ª£ng cao ch·ªëng UV, ch·ªëng ·∫©m c√≥ th·ªÉ b·ªÅn 5-7 nƒÉm. ·ªû Nha Trang c·∫ßn ch·ªçn v·∫£i ch·ªëng m·∫∑n.'
        },
        {
            question: 'Chi ph√≠ b·∫£o d∆∞·ª°ng r√®m nh∆∞ th·∫ø n√†o?',
            answer: 'R√®m v·∫£i c·∫ßn gi·∫∑t 6-12 th√°ng/l·∫ßn (100-300K), r√®m t·ª± ƒë·ªông c·∫ßn b·∫£o d∆∞·ª°ng motor 1 nƒÉm/l·∫ßn (200-500K).'
        },
        {
            question: 'C√≥ th·ªÉ thay ch·ªâ v·∫£i r√®m kh√¥ng?',
            answer: 'C√≥ th·ªÉ thay v·∫£i m·ªõi gi·ªØ nguy√™n ray v√† ph·ª• ki·ªán, ti·∫øt ki·ªám 30-50% chi ph√≠ so v·ªõi l√†m m·ªõi ho√†n to√†n.'
        }
    ];

    const currentType = curtainTypes.find(type => type.id === activeTab);

    return (
        <div className="construction-detail-page">
            {/* Hero Section */}
            <section className="section section-gradient">
                <div className="container">
                    <div className="text-center">
                        <h1 className="section-title">
                            ü™ü B√°o Gi√° Thi C√¥ng R√®m C·ª≠a Cao C·∫•p 2025
                        </h1>
                        <p className="section-subtitle">
                            B√°o gi√° chi ti·∫øt l·∫Øp ƒë·∫∑t r√®m v·∫£i, r√®m c·∫ßu v·ªìng, r√®m t·ª± ƒë·ªông 
                            t·∫°i H√† N·ªôi & Nha Trang. ƒê·∫πp - Sang - Gi√° t·ªët.
                        </p>
                        
                        <div className="hero-features grid-4">
                            <div className="feature-item">
                                <i className="fas fa-sun"></i>
                                <span>Ch·ªëng N·∫Øng 95%</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-volume-mute"></i>
                                <span>C√°ch √Çm T·ªët</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-mobile-alt"></i>
                                <span>ƒêi·ªÅu Khi·ªÉn Th√¥ng Minh</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-palette"></i>
                                <span>ƒêa D·∫°ng M·∫´u M√£</span>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Curtain Types */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üé≠ Lo·∫°i R√®m C·ª≠a & B√°o Gi√°</h2>
                    <p className="section-subtitle">
                        3 d√≤ng r√®m c·ª≠a ph√π h·ª£p m·ªçi kh√¥ng gian v√† nhu c·∫ßu
                    </p>

                    <div className="tabs">
                        {curtainTypes.map(type => (
                            <button
                                key={type.id}
                                className={`tab ${activeTab === type.id ? 'active' : ''}`}
                                onClick={() => setActiveTab(type.id)}
                            >
                                {type.name}
                            </button>
                        ))}
                    </div>

                    {currentType && (
                        <div className="curtain-detail">
                            <div className="detail-header" style={{ background: `linear-gradient(135deg, ${currentType.bgColor}, ${currentType.bgColor}dd)` }}>
                                <h3>{currentType.name}</h3>
                                <div className="price-range">{currentType.price}</div>
                                <p>{currentType.description}</p>
                            </div>

                            <div className="detail-content grid-2">
                                <div className="features-section">
                                    <h4>‚ú® ƒê·∫∑c ƒëi·ªÉm:</h4>
                                    <ul className="features-list">
                                        {currentType.features.map((feature, index) => (
                                            <li key={index}>
                                                <i className="fas fa-check"></i>
                                                {feature}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="materials-section">
                                    <h4>üé® Ch·∫•t li·ªáu & gi√°:</h4>
                                    <div className="materials-list">
                                        {currentType.materials.map((material, index) => (
                                            <div key={index} className="material-item">
                                                <div className="material-name">{material.name}</div>
                                                <div className="material-price">{material.price}</div>
                                                <div className="material-origin">Xu·∫•t x·ª©: {material.origin}</div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>

                            <div className="detail-actions">
                                <a href="/lien-he" className="btn btn-primary">
                                    <i className="fas fa-phone"></i>
                                    Li√™n H·ªá B√°o Gi√°
                                </a>
                                <a href="/bao-gia/tu-van-bao-gia" className="btn btn-secondary">
                                    <i className="fas fa-eye"></i>
                                    Xem M·∫´u R√®m
                                </a>
                            </div>
                        </div>
                    )}
                </div>
            </section>

            {/* Feature Comparison */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">‚öñÔ∏è So S√°nh T√≠nh NƒÉng</h2>
                    <p className="section-subtitle">
                        B·∫£ng so s√°nh chi ti·∫øt 3 lo·∫°i r√®m c·ª≠a
                    </p>

                    <div className="comparison-table">
                        <div className="table-wrapper">
                            <table className="comparison">
                                <thead>
                                    <tr>
                                        <th>T√≠nh NƒÉng</th>
                                        <th style={{ background: '#8b5cf6' }}>R√®m V·∫£i</th>
                                        <th style={{ background: '#ec4899' }}>R√®m C·∫ßu V·ªìng</th>
                                        <th style={{ background: '#3b82f6' }}>R√®m T·ª± ƒê·ªông</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {featureComparison.map((row, index) => (
                                        <tr key={index}>
                                            <td className="feature-name">{row.feature}</td>
                                            <td>{row.fabric}</td>
                                            <td>{row.rainbow}</td>
                                            <td>{row.smart}</td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </section>

            {/* Installation Process */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üîß Quy Tr√¨nh Thi C√¥ng</h2>
                    <p className="section-subtitle">
                        5 b∆∞·ªõc l·∫Øp ƒë·∫∑t r√®m c·ª≠a chuy√™n nghi·ªáp
                    </p>

                    <div className="process-timeline">
                        {installationSteps.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">
                                    <i className={step.icon}></i>
                                    <span>{step.step}</span>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-duration">
                                        <i className="far fa-clock"></i>
                                        {step.duration}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Applications by Space */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üè† ·ª®ng D·ª•ng Theo Kh√¥ng Gian</h2>
                    <p className="section-subtitle">
                        G·ª£i √Ω lo·∫°i r√®m ph√π h·ª£p t·ª´ng kh√¥ng gian
                    </p>

                    <div className="applications-grid grid-4">
                        {applications.map((app, index) => (
                            <div key={index} className="application-card card">
                                <div className="card-header">
                                    <h3>
                                        <i className={app.icon}></i>
                                        {app.space}
                                    </h3>
                                </div>
                                <div className="card-body">
                                    <div className="recommended">
                                        <h4>üí° G·ª£i √Ω:</h4>
                                        <p className="product-name">{app.recommended}</p>
                                    </div>
                                    <div className="reason">
                                        <h4>üìã L√Ω do:</h4>
                                        <p>{app.reason}</p>
                                    </div>
                                    <div className="app-price">
                                        <strong>{app.price}</strong>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>
                    
                    <div className="faq-list">
                        {faqData.map((faq, index) => (
                            <div key={index} className="faq-item">
                                <button 
                                    className={`faq-question ${activeFaq === index ? 'active' : ''}`}
                                    onClick={() => setActiveFaq(activeFaq === index ? null : index)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                </button>
                                {activeFaq === index && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default RemCuaCaoCapPage;
