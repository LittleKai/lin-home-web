// src/pages/bao-gia/bao-gia-thi-cong-hang-muc/nhom-kinh.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../../styles/CommonStyles.css';
import '../BaoGiaThiCongHangMuc.css';

const NhomKinhPage = () => {
    const [activeTab, setActiveTab] = useState('doors');
    const [activeFaq, setActiveFaq] = useState(null);

    // Pricing data for aluminum and glass
    const aluminumTypes = [
        {
            id: 'doors',
            name: 'C·ª≠a Nh√¥m K√≠nh',
            price: '450,000 - 850,000 VNƒê/m¬≤',
            description: 'C·ª≠a ƒëi, c·ª≠a s·ªï nh√¥m k√≠nh cho nh√† ·ªü, vƒÉn ph√≤ng',
            features: [
                'Nh√¥m Xingfa/Vi·ªát Ph√°p profile',
                'K√≠nh c∆∞·ªùng l·ª±c 6-8mm',
                'Ph·ª• ki·ªán ch√≠nh h√£ng (kh√≥a, b·∫£n l·ªÅ)',
                'GioƒÉng cao su ch·ªëng th·∫•m',
                'B·∫£o h√†nh 2-3 nƒÉm'
            ],
            applications: ['C·ª≠a ch√≠nh', 'C·ª≠a ban c√¥ng', 'C·ª≠a s·ªï', 'C·ª≠a ph√≤ng'],
            bgColor: '#3b82f6'
        },
        {
            id: 'curtain',
            name: 'V√°ch K√≠nh & M·∫∑t D·ª±ng',
            price: '850,000 - 1,500,000 VNƒê/m¬≤',
            description: 'V√°ch k√≠nh ngƒÉn ph√≤ng, m·∫∑t d·ª±ng t√≤a nh√†',
            features: [
                'H·ªá khung nh√¥m structural glazing',
                'K√≠nh h·ªôp c√°ch √¢m/c√°ch nhi·ªát',
                'Seal silicone ch·ªëng th·∫•m',
                'Thi·∫øt k·∫ø theo y√™u c·∫ßu',
                'B·∫£o h√†nh 3-5 nƒÉm'
            ],
            applications: ['M·∫∑t d·ª±ng t√≤a nh√†', 'V√°ch vƒÉn ph√≤ng', 'Showroom', 'Nh√† k√≠nh'],
            bgColor: '#059669'
        },
        {
            id: 'premium',
            name: 'Nh√¥m K√≠nh Cao C·∫•p',
            price: '1,200,000 - 1,800,000 VNƒê/m¬≤',
            description: 'H·ªá nh√¥m k√≠nh cao c·∫•p v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn',
            features: [
                'Nh√¥m h·ªá Thermal Break',
                'K√≠nh Low-E c√°ch nhi·ªát',
                'Ph·ª• ki·ªán ch√¢u √Çu',
                'C√°ch √¢m > 35dB',
                'B·∫£o h√†nh 5-7 nƒÉm'
            ],
            applications: ['Bi·ªát th·ª±', 'Penthouse', 'Kh√°ch s·∫°n 5*', 'T√≤a nh√† cao c·∫•p'],
            bgColor: '#8b5cf6'
        }
    ];

    // Glass types and specifications
    const glassTypes = [
        {
            type: 'K√≠nh C∆∞·ªùng L·ª±c',
            thickness: '6mm - 19mm',
            price: '350,000 - 750,000 VNƒê/m¬≤',
            features: ['An to√†n cao', 'Ch·ªëng va ƒë·∫≠p', 'Ch·ªãu nhi·ªát t·ªët'],
            applications: ['C·ª≠a ra v√†o', 'V√°ch ngƒÉn', 'Lan can']
        },
        {
            type: 'K√≠nh H·ªôp (Double Glazing)',
            thickness: '16mm - 24mm',
            price: '450,000 - 950,000 VNƒê/m¬≤',
            features: ['C√°ch √¢m tuy·ªát v·ªùi', 'C√°ch nhi·ªát', 'Ch·ªëng ƒë·ªçng s∆∞∆°ng'],
            applications: ['M·∫∑t d·ª±ng', 'C·ª≠a s·ªï cao c·∫•p', 'V√°ch k√≠nh vƒÉn ph√≤ng']
        },
        {
            type: 'K√≠nh Low-E',
            thickness: '6mm - 12mm',
            price: '650,000 - 1,200,000 VNƒê/m¬≤',
            features: ['Ti·∫øt ki·ªám nƒÉng l∆∞·ª£ng', 'L·ªçc tia UV', 'M√†ng ph·ªß ƒë·∫∑c bi·ªát'],
            applications: ['T√≤a nh√† xanh', 'Nh√† th√¥ng minh', 'Kh√°ch s·∫°n resort']
        }
    ];

    // Installation process
    const installationSteps = [
        {
            step: 1,
            title: 'ƒêo ƒê·∫°c & Thi·∫øt K·∫ø',
            description: 'Kh·∫£o s√°t th·ª±c ƒë·ªãa, ƒëo ƒë·∫°c ch√≠nh x√°c, thi·∫øt k·∫ø k·ªπ thu·∫≠t',
            duration: '1-2 ng√†y',
            icon: 'fas fa-ruler'
        },
        {
            step: 2,
            title: 'Gia C√¥ng T·∫°i X∆∞·ªüng',
            description: 'C·∫Øt profile nh√¥m, gia c√¥ng k√≠nh, l·∫Øp r√°p ph·ª• ki·ªán',
            duration: '3-7 ng√†y',
            icon: 'fas fa-industry'
        },
        {
            step: 3,
            title: 'Chu·∫©n B·ªã C√¥ng Tr√¨nh',
            description: 'Chu·∫©n b·ªã √¥ ch·ªù, ki·ªÉm tra k·∫øt c·∫•u, l√†m s·∫°ch b·ªÅ m·∫∑t',
            duration: '0.5 ng√†y',
            icon: 'fas fa-broom'
        },
        {
            step: 4,
            title: 'L·∫Øp ƒê·∫∑t Khung & K√≠nh',
            description: 'C·ªë ƒë·ªãnh khung nh√¥m, l·∫Øp k√≠nh, ƒëi·ªÅu ch·ªânh ƒë·ªô k√≠n',
            duration: '1-3 ng√†y',
            icon: 'fas fa-tools'
        },
        {
            step: 5,
            title: 'Ho√†n Thi·ªán & B√†n Giao',
            description: 'Ki·ªÉm tra ch·∫•t l∆∞·ª£ng, v·ªá sinh, h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng',
            duration: '0.5 ng√†y',
            icon: 'fas fa-handshake'
        }
    ];

    // Maintenance guidelines
    const maintenanceGuides = [
        {
            category: 'V·ªá sinh th∆∞·ªùng xuy√™n',
            icon: 'fas fa-spray-can',
            tips: [
                'Lau k√≠nh b·∫±ng dung d·ªãch chuy√™n d·ª•ng',
                'V·ªá sinh ray tr∆∞·ª£t ƒë·ªãnh k·ª≥',
                'Ki·ªÉm tra gioƒÉng cao su',
                'B√¥i tr√¥n ph·ª• ki·ªán 6 th√°ng/l·∫ßn'
            ]
        },
        {
            category: 'B·∫£o d∆∞·ª°ng ƒë·ªãnh k·ª≥',
            icon: 'fas fa-cog',
            tips: [
                'Thay gioƒÉng cao su 3-5 nƒÉm',
                'ƒêi·ªÅu ch·ªânh ƒë·ªô k√≠n c·ª≠a',
                'Ki·ªÉm tra v√≠t c·ªë ƒë·ªãnh',
                'S∆°n l·∫°i frame nh√¥m 7-10 nƒÉm'
            ]
        },
        {
            category: 'X·ª≠ l√Ω s·ª± c·ªë',
            icon: 'fas fa-wrench',
            tips: [
                'C·ª≠a kh√≥ ƒë√≥ng m·ªü: b√¥i tr√¥n ray',
                'K√≠nh b·ªã x∆∞·ªõc: ƒë√°nh b√≥ng ho·∫∑c thay',
                'GioƒÉng b·ªã h·ªèng: thay ngay',
                'Li√™n h·ªá th·ª£ chuy√™n nghi·ªáp khi c·∫ßn'
            ]
        }
    ];

    // FAQ data
    const faqData = [
        {
            question: 'Nh√¥m Xingfa v√† Vi·ªát Ph√°p kh√°c g√¨?',
            answer: 'Nh√¥m Xingfa: ch·∫•t l∆∞·ª£ng cao, ƒë·ªô b·ªÅn t·ªët, gi√° cao h∆°n, tem ƒë·ªè ch√≠nh h√£ng. Nh√¥m Vi·ªát Ph√°p: gi√° h·ª£p l√Ω, ph√π h·ª£p nh√† ·ªü d√¢n d·ª•ng, ch·∫•t l∆∞·ª£ng ·ªïn ƒë·ªãnh.'
        },
        {
            question: 'Th·ªùi gian thi c√¥ng nh√¥m k√≠nh bao l√¢u?',
            answer: 'C·ª≠a ƒë∆°n gi·∫£n: 3-5 ng√†y. V√°ch k√≠nh l·ªõn: 7-10 ng√†y. M·∫∑t d·ª±ng t√≤a nh√†: 2-4 tu·∫ßn. Th·ªùi gian ph·ª• thu·ªôc di·ªán t√≠ch v√† ƒë·ªô ph·ª©c t·∫°p thi·∫øt k·∫ø.'
        },
        {
            question: 'Nh√¥m k√≠nh c√≥ c√°ch √¢m t·ªët kh√¥ng?',
            answer: 'C·ª≠a nh√¥m k√≠nh th∆∞·ªùng: 25-30dB. K√≠nh h·ªôp c√°ch √¢m: 35-40dB. H·ªá cao c·∫•p v·ªõi k√≠nh Low-E: 40-45dB. ƒê·ªß cho y√™u c·∫ßu d√¢n d·ª•ng v√† vƒÉn ph√≤ng.'
        },
        {
            question: 'Chi ph√≠ b·∫£o d∆∞·ª°ng nh√¥m k√≠nh nh∆∞ th·∫ø n√†o?',
            answer: 'V·ªá sinh ƒë·ªãnh k·ª≥: 20,000-50,000 VNƒê/m¬≤/nƒÉm. Thay gioƒÉng: 50,000-100,000 VNƒê/m¬≤/5 nƒÉm. S∆°n l·∫°i frame: 150,000-250,000 VNƒê/m¬≤/10 nƒÉm.'
        }
    ];

    const currentType = aluminumTypes.find(type => type.id === activeTab);

    return (
        <div className="construction-detail-page">
            {/* Hero Section */}
            <section className="section section-gradient">
                <div className="container">
                    <div className="text-center">
                        <h1 className="section-title">
                            ü™ü B√°o Gi√° Thi C√¥ng Nh√¥m K√≠nh 2025
                        </h1>
                        <p className="section-subtitle">
                            B√°o gi√° chi ti·∫øt thi c√¥ng c·ª≠a nh√¥m k√≠nh, v√°ch k√≠nh, m·∫∑t d·ª±ng 
                            t·∫°i H√† N·ªôi & Nha Trang. Ch·∫•t l∆∞·ª£ng cao - B·∫£o h√†nh d√†i h·∫°n.
                        </p>
                        
                        <div className="hero-features grid-4">
                            <div className="feature-item">
                                <i className="fas fa-shield-alt"></i>
                                <span>An To√†n Cao</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-volume-off"></i>
                                <span>C√°ch √Çm T·ªët</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-sun"></i>
                                <span>√Ånh S√°ng T·ª± Nhi√™n</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-gem"></i>
                                <span>Th·∫©m M·ªπ Cao</span>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Aluminum Types */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üèóÔ∏è Lo·∫°i Nh√¥m K√≠nh & B√°o Gi√°</h2>
                    <p className="section-subtitle">
                        3 d√≤ng s·∫£n ph·∫©m nh√¥m k√≠nh ph√π h·ª£p m·ªçi c√¥ng tr√¨nh
                    </p>

                    <div className="tabs">
                        {aluminumTypes.map(type => (
                            <button
                                key={type.id}
                                className={`tab ${activeTab === type.id ? 'active' : ''}`}
                                onClick={() => setActiveTab(type.id)}
                            >
                                {type.name}
                            </button>
                        ))}
                    </div>

                    {currentType && (
                        <div className="aluminum-detail">
                            <div className="detail-header" style={{ background: `linear-gradient(135deg, ${currentType.bgColor}, ${currentType.bgColor}dd)` }}>
                                <h3>{currentType.name}</h3>
                                <div className="price-range">{currentType.price}</div>
                                <p>{currentType.description}</p>
                            </div>

                            <div className="detail-content grid-2">
                                <div className="features-section">
                                    <h4>‚ú® Bao g·ªìm:</h4>
                                    <ul className="features-list">
                                        {currentType.features.map((feature, index) => (
                                            <li key={index}>
                                                <i className="fas fa-check"></i>
                                                {feature}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="applications-section">
                                    <h4>üè† ·ª®ng d·ª•ng:</h4>
                                    <div className="tags">
                                        {currentType.applications.map((app, index) => (
                                            <span key={index} className="tag">{app}</span>
                                        ))}
                                    </div>
                                </div>
                            </div>

                            <div className="detail-actions">
                                <a href="/lien-he" className="btn btn-primary">
                                    <i className="fas fa-phone"></i>
                                    Li√™n H·ªá B√°o Gi√°
                                </a>
                                <a href="/bao-gia/tu-van-bao-gia" className="btn btn-secondary">
                                    <i className="fas fa-calculator"></i>
                                    T√≠nh Chi Ph√≠
                                </a>
                            </div>
                        </div>
                    )}
                </div>
            </section>

            {/* Glass Types */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üîç Lo·∫°i K√≠nh & Th√¥ng S·ªë</h2>
                    <p className="section-subtitle">
                        So s√°nh c√°c lo·∫°i k√≠nh ph·ªï bi·∫øn trong thi c√¥ng nh√¥m k√≠nh
                    </p>

                    <div className="glass-grid grid-3">
                        {glassTypes.map((glass, index) => (
                            <div key={index} className="glass-card card">
                                <div className="card-header">
                                    <h3>{glass.type}</h3>
                                    <div className="glass-thickness">{glass.thickness}</div>
                                    <div className="glass-price">{glass.price}</div>
                                </div>
                                <div className="card-body">
                                    <div className="glass-features">
                                        <h4>üî∏ ƒê·∫∑c ƒëi·ªÉm:</h4>
                                        <ul>
                                            {glass.features.map((feature, i) => (
                                                <li key={i}>
                                                    <i className="fas fa-star"></i>
                                                    {feature}
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                    <div className="glass-applications">
                                        <h4>üî∏ ·ª®ng d·ª•ng:</h4>
                                        <ul>
                                            {glass.applications.map((app, i) => (
                                                <li key={i}>
                                                    <i className="fas fa-arrow-right"></i>
                                                    {app}
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Installation Process */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üîß Quy Tr√¨nh Thi C√¥ng</h2>
                    <p className="section-subtitle">
                        5 b∆∞·ªõc thi c√¥ng chuy√™n nghi·ªáp ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng
                    </p>

                    <div className="process-timeline">
                        {installationSteps.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">
                                    <i className={step.icon}></i>
                                    <span>{step.step}</span>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-duration">
                                        <i className="far fa-clock"></i>
                                        {step.duration}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Maintenance Guidelines */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üßΩ H∆∞·ªõng D·∫´n B·∫£o D∆∞·ª°ng</h2>
                    <p className="section-subtitle">
                        C√°ch chƒÉm s√≥c nh√¥m k√≠nh ƒë·ªÉ tƒÉng tu·ªïi th·ªç v√† gi·ªØ th·∫©m m·ªπ
                    </p>

                    <div className="maintenance-grid grid-3">
                        {maintenanceGuides.map((guide, index) => (
                            <div key={index} className="maintenance-card card">
                                <div className="card-header">
                                    <h3>
                                        <i className={guide.icon}></i>
                                        {guide.category}
                                    </h3>
                                </div>
                                <div className="card-body">
                                    <ul>
                                        {guide.tips.map((tip, i) => (
                                            <li key={i}>
                                                <i className="fas fa-check-circle"></i>
                                                {tip}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>
                    
                    <div className="faq-list">
                        {faqData.map((faq, index) => (
                            <div key={index} className="faq-item">
                                <button 
                                    className={`faq-question ${activeFaq === index ? 'active' : ''}`}
                                    onClick={() => setActiveFaq(activeFaq === index ? null : index)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                </button>
                                {activeFaq === index && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default NhomKinhPage;
