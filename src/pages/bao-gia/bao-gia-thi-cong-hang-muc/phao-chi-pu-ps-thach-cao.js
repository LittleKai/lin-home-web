// src/pages/bao-gia/bao-gia-thi-cong-hang-muc/phao-chi-pu-ps-thach-cao.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../../styles/CommonStyles.css';


const PhaoChiPage = () => {
    const [activeTab, setActiveTab] = useState('pu');
    const [activeFaq, setActiveFaq] = useState(null);

    // Molding types
    const moldingTypes = [
        {
            id: 'pu',
            name: 'Ph√†o Ch·ªâ PU (Polyurethane)',
            price: '45,000 - 150,000 VNƒê/m',
            description: 'Ph√†o ch·ªâ PU nh·∫π, b·ªÅn, ch·ªëng m·ªëi m·ªçt, d·ªÖ s∆°n ph·ªß',
            features: [
                'Nh·∫π v√† b·ªÅn ch·∫Øc',
                'Ch·ªëng m·ªëi m·ªçt hi·ªáu qu·∫£',
                'D·ªÖ s∆°n ph·ªß nhi·ªÅu m√†u',
                'ƒêa d·∫°ng m·∫´u m√£ hoa vƒÉn',
                'Kh√¥ng b·ªã cong v√™nh',
                'Ch·ªëng ·∫©m t·ªët'
            ],
            applications: [
                { type: 'Ph√†o tr·∫ßn', size: '5-15cm', price: '45-80K' },
                { type: 'Ph√†o ch√¢n t∆∞·ªùng', size: '8-12cm', price: '60-100K' },
                { type: 'Khung tranh', size: '3-8cm', price: '50-120K' },
                { type: 'Ph√†o c·ªôt trang tr√≠', size: '10-20cm', price: '80-150K' }
            ],
            bgColor: '#f59e0b'
        },
        {
            id: 'ps',
            name: 'Ph√†o Ch·ªâ PS (Polystyrene)',
            price: '25,000 - 85,000 VNƒê/m',
            description: 'Ph√†o ch·ªâ PS gi√° r·∫ª nh·∫•t, thi c√¥ng nhanh, b·ªÅ m·∫∑t m·ªãn',
            features: [
                'Gi√° r·∫ª nh·∫•t th·ªã tr∆∞·ªùng',
                'Thi c√¥ng nhanh g·ªçn',
                'B·ªÅ m·∫∑t m·ªãn ƒë·∫πp',
                'D·ªÖ c·∫Øt g·ªçt t·∫°o h√¨nh',
                'Tr·ªçng l∆∞·ª£ng nh·∫π',
                'M√†u tr·∫Øng tinh khi·∫øt'
            ],
            applications: [
                { type: 'Ph√†o tr·∫ßn c∆° b·∫£n', size: '5-10cm', price: '25-45K' },
                { type: 'Trang tr√≠ ƒë∆°n gi·∫£n', size: '3-8cm', price: '30-55K' },
                { type: 'CƒÉn h·ªô chung c∆∞', size: '6-12cm', price: '35-65K' },
                { type: 'VƒÉn ph√≤ng', size: '4-10cm', price: '40-85K' }
            ],
            bgColor: '#10b981'
        },
        {
            id: 'gypsum',
            name: 'Ph√†o Ch·ªâ Th·∫°ch Cao',
            price: '65,000 - 180,000 VNƒê/m',
            description: 'Ph√†o ch·ªâ th·∫°ch cao t·∫°o h√¨nh linh ho·∫°t, sang tr·ªçng c·ªï ƒëi·ªÉn',
            features: [
                'T·∫°o h√¨nh linh ho·∫°t ph·ª©c t·∫°p',
                'Ch·ªëng ch√°y an to√†n',
                'C√°ch √¢m nh·∫π',
                'Sang tr·ªçng c·ªï ƒëi·ªÉn',
                'C√≥ th·ªÉ ƒëi√™u kh·∫Øc chi ti·∫øt',
                'Th√¢n thi·ªán m√¥i tr∆∞·ªùng'
            ],
            applications: [
                { type: 'Bi·ªát th·ª± c·ªï ƒëi·ªÉn', size: '10-25cm', price: '80-150K' },
                { type: 'Kh√°ch s·∫°n cao c·∫•p', size: '8-20cm', price: '90-160K' },
                { type: 'Nh√† h√†ng sang tr·ªçng', size: '12-30cm', price: '100-180K' },
                { type: 'H·ªôi tr∆∞·ªùng', size: '15-35cm', price: '120-180K' }
            ],
            bgColor: '#8b5cf6'
        }
    ];

    // Installation process
    const installationSteps = [
        {
            step: 1,
            title: 'Kh·∫£o S√°t & ƒêo ƒê·∫°c',
            description: 'ƒêo ƒë·∫°c di·ªán t√≠ch, thi·∫øt k·∫ø b·ªë tr√≠ ph√†o ch·ªâ ph√π h·ª£p phong c√°ch',
            duration: '0.5 ng√†y',
            icon: 'fas fa-ruler'
        },
        {
            step: 2,
            title: 'Ch·ªçn Lo·∫°i & M·∫´u M√£',
            description: 'T∆∞ v·∫•n ch·ªçn lo·∫°i ph√†o ch·ªâ (PU, PS, th·∫°ch cao) v√† hoa vƒÉn',
            duration: '1 ng√†y',
            icon: 'fas fa-palette'
        },
        {
            step: 3,
            title: 'Gia C√¥ng & Chu·∫©n B·ªã',
            description: 'Gia c√¥ng, c·∫Øt ph√†o ch·ªâ theo k√≠ch th∆∞·ªõc, chu·∫©n b·ªã keo d√°n',
            duration: '1-2 ng√†y',
            icon: 'fas fa-cut'
        },
        {
            step: 4,
            title: 'L·∫Øp ƒê·∫∑t & C·ªë ƒê·ªãnh',
            description: 'L·∫Øp ƒë·∫∑t, c·ªë ƒë·ªãnh b·∫±ng keo chuy√™n d·ª•ng ho·∫∑c v√≠t ·ªëc',
            duration: '1-3 ng√†y',
            icon: 'fas fa-tools'
        },
        {
            step: 5,
            title: 'Ho√†n Thi·ªán & S∆°n',
            description: 'X·ª≠ l√Ω m·ªëi n·ªëi, s∆°n ho√†n thi·ªán theo y√™u c·∫ßu',
            duration: '1-2 ng√†y',
            icon: 'fas fa-paint-brush'
        }
    ];

    // Design styles
    const designStyles = [
        {
            style: 'Hi·ªán ƒê·∫°i - T·ªëi Gi·∫£n',
            description: 'Ph√†o ch·ªâ ƒë∆°n gi·∫£n, ƒë∆∞·ªùng n√©t th·∫≥ng, t√¥ng m√†u trung t√≠nh',
            materials: ['PS c∆° b·∫£n', 'PU ƒë∆°n gi·∫£n'],
            spaces: ['Chung c∆∞ hi·ªán ƒë·∫°i', 'VƒÉn ph√≤ng', 'Nh√† ph·ªë tr·∫ª'],
            priceRange: '25-80K/m',
            icon: 'fas fa-minus'
        },
        {
            style: 'T√¢n C·ªï ƒêi·ªÉn',
            description: 'Hoa vƒÉn tinh t·∫ø, ƒë∆∞·ªùng cong m·ªÅm m·∫°i, chi ti·∫øt phong ph√∫',
            materials: ['PU cao c·∫•p', 'Th·∫°ch cao ƒëi√™u kh·∫Øc'],
            spaces: ['Bi·ªát th·ª±', 'Kh√°ch s·∫°n 4-5*', 'Nh√† h√†ng sang'],
            priceRange: '80-180K/m',
            icon: 'fas fa-crown'
        },
        {
            style: 'C·ªï ƒêi·ªÉn Ch√¢u √Çu',
            description: 'Hoa vƒÉn ph·ª©c t·∫°p, nhi·ªÅu t·∫ßng l·ªõp, phong c√°ch ho√†ng gia',
            materials: ['Th·∫°ch cao ƒëi√™u kh·∫Øc', 'PU hoa vƒÉn ph·ª©c t·∫°p'],
            spaces: ['Villa cao c·∫•p', 'Dinh th·ª±', 'Cung ƒëi·ªán'],
            priceRange: '120-250K/m',
            icon: 'fas fa-chess-queen'
        },
        {
            style: 'Phong C√°ch √Å ƒê√¥ng',
            description: 'H·ªça ti·∫øt truy·ªÅn th·ªëng, m√†u s·∫Øc ·∫•m √°p, h√†i h√≤a phong th·ªßy',
            materials: ['Th·∫°ch cao', 'PU c√≥ h·ªça ti·∫øt'],
            spaces: ['Nh√† h√†ng √Å ƒê√¥ng', 'Resort', 'Spa'],
            priceRange: '70-150K/m',
            icon: 'fas fa-yin-yang'
        }
    ];

    // Comparison table
    const comparison = [
        {
            aspect: 'Gi√° th√†nh',
            pu: 'Trung b√¨nh',
            ps: 'R·∫ª nh·∫•t',
            gypsum: 'Cao nh·∫•t'
        },
        {
            aspect: 'ƒê·ªô b·ªÅn',
            pu: '8-12 nƒÉm',
            ps: '3-5 nƒÉm',
            gypsum: '10-20 nƒÉm'
        },
        {
            aspect: 'Ch·ªëng ·∫©m',
            pu: 'T·ªët',
            ps: 'Trung b√¨nh',
            gypsum: 'K√©m'
        },
        {
            aspect: 'T·∫°o h√¨nh',
            pu: 'ƒêa d·∫°ng',
            ps: 'H·∫°n ch·∫ø',
            gypsum: 'Linh ho·∫°t nh·∫•t'
        },
        {
            aspect: 'Thi c√¥ng',
            pu: 'D·ªÖ',
            ps: 'R·∫•t d·ªÖ',
            gypsum: 'Ph·ª©c t·∫°p'
        }
    ];

    // FAQ data
    const faqData = [
        {
            question: 'N√™n ch·ªçn ph√†o ch·ªâ PU hay PS?',
            answer: 'PU b·ªÅn h∆°n, ch·ªëng ·∫©m t·ªët, ƒëa d·∫°ng m·∫´u m√£ nh∆∞ng ƒë·∫Øt h∆°n. PS gi√° r·∫ª, thi c√¥ng nhanh, ph√π h·ª£p n·ªôi th·∫•t c∆° b·∫£n. Ch·ªçn t√πy ng√¢n s√°ch v√† y√™u c·∫ßu.'
        },
        {
            question: 'Ph√†o ch·ªâ c√≥ b·ªã cong v√™nh kh√¥ng?',
            answer: 'PU v√† th·∫°ch cao √≠t b·ªã cong v√™nh. PS c√≥ th·ªÉ b·ªã cong n·∫øu nhi·ªát ƒë·ªô cao ho·∫∑c thi c√¥ng kh√¥ng ƒë√∫ng k·ªπ thu·∫≠t.'
        },
        {
            question: 'Chi ph√≠ l·∫Øp ph√†o ch·ªâ cho cƒÉn h·ªô 80m¬≤ bao nhi·ªÅu?',
            answer: 'Ph√†o tr·∫ßn + ch√¢n t∆∞·ªùng: PS 3-5 tri·ªáu, PU 6-10 tri·ªáu, th·∫°ch cao 8-15 tri·ªáu t√πy ƒë·ªô ph·ª©c t·∫°p.'
        },
        {
            question: 'Ph√†o ch·ªâ c√≥ c·∫ßn b·∫£o d∆∞·ª°ng kh√¥ng?',
            answer: 'Ch·ªâ c·∫ßn v·ªá sinh b·ª•i b·∫©n ƒë·ªãnh k·ª≥. N·∫øu s∆°n phai m√†u c√≥ th·ªÉ s∆°n l·∫°i. PU v√† th·∫°ch cao b·ªÅn l√¢u, √≠t c·∫ßn b·∫£o d∆∞·ª°ng.'
        }
    ];

    const currentType = moldingTypes.find(type => type.id === activeTab);

    return (
        <div className="construction-detail-page">
            {/* Hero Section */}
            <section className="section section-gradient">
                <div className="container">
                    <div className="text-center">
                        <h1 className="section-title">
                            üé® B√°o Gi√° Thi C√¥ng Ph√†o Ch·ªâ PU - PS - Th·∫°ch Cao 2025
                        </h1>
                        <p className="section-subtitle">
                            B√°o gi√° chi ti·∫øt l·∫Øp ƒë·∫∑t ph√†o ch·ªâ trang tr√≠ PU, PS, th·∫°ch cao 
                            t·∫°i H√† N·ªôi & Nha Trang. ƒê·∫πp - Sang - Gi√° h·ª£p l√Ω.
                        </p>
                        
                        <div className="hero-features grid-4">
                            <div className="feature-item">
                                <i className="fas fa-border-style"></i>
                                <span>ƒêa D·∫°ng M·∫´u M√£</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-hammer"></i>
                                <span>Thi C√¥ng Chuy√™n Nghi·ªáp</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-paint-brush"></i>
                                <span>Ho√†n Thi·ªán Tinh T·∫ø</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-award"></i>
                                <span>Ch·∫•t L∆∞·ª£ng Cao</span>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Molding Types */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üèõÔ∏è Lo·∫°i Ph√†o Ch·ªâ & B√°o Gi√°</h2>
                    <p className="section-subtitle">
                        3 lo·∫°i ph√†o ch·ªâ ph·ªï bi·∫øn v·ªõi ƒë·∫∑c ƒëi·ªÉm v√† gi√° c·∫£ kh√°c nhau
                    </p>

                    <div className="tabs">
                        {moldingTypes.map(type => (
                            <button
                                key={type.id}
                                className={`tab ${activeTab === type.id ? 'active' : ''}`}
                                onClick={() => setActiveTab(type.id)}
                            >
                                {type.name}
                            </button>
                        ))}
                    </div>

                    {currentType && (
                        <div className="molding-detail">
                            <div className="detail-header" style={{ background: `linear-gradient(135deg, ${currentType.bgColor}, ${currentType.bgColor}dd)` }}>
                                <h3>{currentType.name}</h3>
                                <div className="price-range">{currentType.price}</div>
                                <p>{currentType.description}</p>
                            </div>

                            <div className="detail-content grid-2">
                                <div className="features-section">
                                    <h4>‚ú® ƒê·∫∑c ƒëi·ªÉm:</h4>
                                    <ul className="features-list">
                                        {currentType.features.map((feature, index) => (
                                            <li key={index}>
                                                <i className="fas fa-check"></i>
                                                {feature}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="applications-section">
                                    <h4>üè† ·ª®ng d·ª•ng & gi√°:</h4>
                                    <div className="applications-list">
                                        {currentType.applications.map((app, index) => (
                                            <div key={index} className="application-item">
                                                <div className="app-type">{app.type}</div>
                                                <div className="app-size">K√≠ch th∆∞·ªõc: {app.size}</div>
                                                <div className="app-price">{app.price}/m</div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>

                            <div className="detail-actions">
                                <a href="/lien-he" className="btn btn-primary">
                                    <i className="fas fa-phone"></i>
                                    Li√™n H·ªá B√°o Gi√°
                                </a>
                                <a href="/bao-gia/tu-van-bao-gia" className="btn btn-secondary">
                                    <i className="fas fa-eye"></i>
                                    Xem M·∫´u Ph√†o
                                </a>
                            </div>
                        </div>
                    )}
                </div>
            </section>

            {/* Design Styles */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üé≠ Phong C√°ch Thi·∫øt K·∫ø</h2>
                    <p className="section-subtitle">
                        C√°c phong c√°ch ph√†o ch·ªâ ph√π h·ª£p t·ª´ng kh√¥ng gian
                    </p>

                    <div className="styles-grid grid-4">
                        {designStyles.map((style, index) => (
                            <div key={index} className="style-card card">
                                <div className="card-header">
                                    <h3>
                                        <i className={style.icon}></i>
                                        {style.style}
                                    </h3>
                                    <p>{style.description}</p>
                                    <div className="price-range">{style.priceRange}</div>
                                </div>
                                <div className="card-body">
                                    <div className="materials">
                                        <h4>üì¶ V·∫≠t li·ªáu:</h4>
                                        <div className="tags">
                                            {style.materials.map((material, i) => (
                                                <span key={i} className="tag">{material}</span>
                                            ))}
                                        </div>
                                    </div>
                                    <div className="spaces">
                                        <h4>üè† Ph√π h·ª£p:</h4>
                                        <ul>
                                            {style.spaces.map((space, i) => (
                                                <li key={i}>
                                                    <i className="fas fa-dot-circle"></i>
                                                    {space}
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Comparison Table */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚öñÔ∏è So S√°nh Chi Ti·∫øt</h2>
                    <p className="section-subtitle">
                        B·∫£ng so s√°nh 3 lo·∫°i ph√†o ch·ªâ PU - PS - Th·∫°ch cao
                    </p>

                    <div className="comparison-table">
                        <div className="table-wrapper">
                            <table className="comparison">
                                <thead>
                                    <tr>
                                        <th>Ti√™u Ch√≠</th>
                                        <th style={{ background: '#f59e0b' }}>PU</th>
                                        <th style={{ background: '#10b981' }}>PS</th>
                                        <th style={{ background: '#8b5cf6' }}>Th·∫°ch Cao</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {comparison.map((row, index) => (
                                        <tr key={index}>
                                            <td className="aspect-name">{row.aspect}</td>
                                            <td>{row.pu}</td>
                                            <td>{row.ps}</td>
                                            <td>{row.gypsum}</td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </section>

            {/* Installation Process */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üîß Quy Tr√¨nh Thi C√¥ng</h2>
                    <p className="section-subtitle">
                        5 b∆∞·ªõc l·∫Øp ƒë·∫∑t ph√†o ch·ªâ chuy√™n nghi·ªáp
                    </p>

                    <div className="process-timeline">
                        {installationSteps.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">
                                    <i className={step.icon}></i>
                                    <span>{step.step}</span>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-duration">
                                        <i className="far fa-clock"></i>
                                        {step.duration}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>
                    
                    <div className="faq-list">
                        {faqData.map((faq, index) => (
                            <div key={index} className="faq-item">
                                <button 
                                    className={`faq-question ${activeFaq === index ? 'active' : ''}`}
                                    onClick={() => setActiveFaq(activeFaq === index ? null : index)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                </button>
                                {activeFaq === index && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default PhaoChiPage;
