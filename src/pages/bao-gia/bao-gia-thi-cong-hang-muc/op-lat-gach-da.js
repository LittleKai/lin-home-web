// src/pages/bao-gia/bao-gia-thi-cong-hang-muc/op-lat-gach-da.js
import React, { useState } from 'react';
import CTAContent from '../../../components/CTAContent/CTAContent';
import '../../../styles/CommonStyles.css';
import '../BaoGiaThiCongHangMuc.css';

const OpLatGachDaPage = () => {
    const [activeTab, setActiveTab] = useState('ceramic');
    const [activeFaq, setActiveFaq] = useState(null);

    // Pricing data for tiling
    const tilingTypes = [
        {
            id: 'ceramic',
            name: 'G·∫°ch Ceramic & Porcelain',
            price: '80,000 - 180,000 VNƒê/m¬≤',
            description: '·ªêp l√°t g·∫°ch ceramic, porcelain cho ph√≤ng kh√°ch, b·∫øp, WC',
            features: [
                'G·∫°ch ceramic/porcelain lo·∫°i A',
                'Keo d√°n chuy√™n d·ª•ng Dulux/Jotun',
                'Xi mƒÉng tr·∫Øng ch√≠t m·∫°ch',
                'Ron nh·ª±a m√†u ƒë·ªìng b·ªô',
                'B·∫£o h√†nh 12-18 th√°ng'
            ],
            suitable: ['Ph√≤ng kh√°ch', 'Ph√≤ng b·∫øp', 'Ph√≤ng t·∫Øm', 'H√†nh lang'],
            bgColor: '#059669'
        },
        {
            id: 'granite',
            name: 'ƒê√° Granite T·ª± Nhi√™n',
            price: '220,000 - 350,000 VNƒê/m¬≤',
            description: '·ªêp l√°t ƒë√° granite t·ª± nhi√™n cao c·∫•p, b·ªÅn ƒë·∫πp sang tr·ªçng',
            features: [
                'ƒê√° granite lo·∫°i A (·∫§n ƒê·ªô, Vi·ªát Nam)',
                'C·∫Øt m√°y, m√†i b√≥ng chu·∫©n',
                'Keo d√°n ƒë√° chuy√™n d·ª•ng',
                'Ch·ªëng th·∫•m, ch·ªëng b√°m b·∫©n',
                'B·∫£o h√†nh 18-24 th√°ng'
            ],
            suitable: ['Ph√≤ng kh√°ch cao c·∫•p', 'C·∫ßu thang', 'S·∫£nh l·ªõn', 'B√†n b·∫øp'],
            bgColor: '#475569'
        },
        {
            id: 'marble',
            name: 'ƒê√° Marble & Nh√¢n T·∫°o',
            price: '350,000 - 450,000 VNƒê/m¬≤',
            description: 'ƒê√° marble t·ª± nhi√™n v√† nh√¢n t·∫°o cho kh√¥ng gian luxury',
            features: [
                'ƒê√° marble t·ª± nhi√™n/nh√¢n t·∫°o',
                'Gia c√¥ng ch√≠nh x√°c cao',
                'X·ª≠ l√Ω ch·ªëng th·∫•m ƒë·∫∑c bi·ªát',
                'ƒê√°nh b√≥ng crystal finish',
                'B·∫£o h√†nh 24-36 th√°ng'
            ],
            suitable: ['Bi·ªát th·ª±', 'Kh√°ch s·∫°n', 'Showroom', 'VƒÉn ph√≤ng CEO'],
            bgColor: '#dc2626'
        }
    ];

    // Technical specifications
    const specifications = [
        {
            category: 'G·∫°ch L√°t N·ªÅn',
            items: [
                { name: 'G·∫°ch 30x30cm', price: '15,000 - 25,000 VNƒê/vi√™n', note: 'Ph√≤ng t·∫Øm, b·∫øp' },
                { name: 'G·∫°ch 40x40cm', price: '25,000 - 45,000 VNƒê/vi√™n', note: 'Ph√≤ng kh√°ch nh·ªè' },
                { name: 'G·∫°ch 60x60cm', price: '45,000 - 85,000 VNƒê/vi√™n', note: 'Ph√≤ng kh√°ch l·ªõn' },
                { name: 'G·∫°ch 80x80cm', price: '85,000 - 150,000 VNƒê/vi√™n', note: 'Kh√¥ng gian r·ªông' }
            ]
        },
        {
            category: 'G·∫°ch ·ªêp T∆∞·ªùng',
            items: [
                { name: 'G·∫°ch th·∫ª 20x40cm', price: '35,000 - 65,000 VNƒê/m¬≤', note: 'Ph√≤ng t·∫Øm ti√™u chu·∫©n' },
                { name: 'G·∫°ch mosaic', price: '120,000 - 250,000 VNƒê/m¬≤', note: 'ƒêi·ªÉm nh·∫•n trang tr√≠' },
                { name: 'G·∫°ch gi·∫£ ƒë√°', price: '85,000 - 180,000 VNƒê/m¬≤', note: 'Ph√≤ng kh√°ch hi·ªán ƒë·∫°i' },
                { name: 'G·∫°ch 3D texture', price: '150,000 - 320,000 VNƒê/m¬≤', note: 'T∆∞·ªùng accent cao c·∫•p' }
            ]
        }
    ];

    // Installation process
    const installationSteps = [
        {
            step: 1,
            title: 'Kh·∫£o S√°t & Chu·∫©n B·ªã',
            description: 'Ki·ªÉm tra ƒë·ªô ph·∫≥ng, ƒë·ªô ·∫©m, x·ª≠ l√Ω l·ªõp n·ªÅn',
            duration: '0.5-1 ng√†y',
            icon: 'fas fa-ruler-combined'
        },
        {
            step: 2,
            title: 'C√°n N·ªÅn & Tr·ªôn Keo',
            description: 'C√°n ƒë·ªÅu b·ªÅ m·∫∑t, tr·ªôn keo d√°n theo t·ª∑ l·ªá chu·∫©n',
            duration: '0.5 ng√†y',
            icon: 'fas fa-trowel'
        },
        {
            step: 3,
            title: 'L√°t G·∫°ch/·ªêp ƒê√°',
            description: 'L√°t theo pattern thi·∫øt k·∫ø, cƒÉn ch·ªânh ron ƒë·ªÅu',
            duration: '1-3 ng√†y',
            icon: 'fas fa-th-large'
        },
        {
            step: 4,
            title: 'Ch√≠t M·∫°ch & Ron',
            description: 'Ch√≠t k√≠n m·∫°ch, l√†m ron ƒë·ªÅu ƒë·∫πp, v·ªá sinh s·∫°ch',
            duration: '1 ng√†y',
            icon: 'fas fa-fill'
        },
        {
            step: 5,
            title: 'Ho√†n Thi·ªán & B√†n Giao',
            description: 'Ki·ªÉm tra ƒë·ªô b√°m d√≠nh, l√†m s·∫°ch, b√†n giao',
            duration: '0.5 ng√†y',
            icon: 'fas fa-check-circle'
        }
    ];

    // Quality criteria
    const qualityCriteria = [
        {
            aspect: 'ƒê·ªô B√°m D√≠nh',
            description: 'G·∫°ch b√°m ch·∫Øc, kh√¥ng r·ªóng, kh√¥ng bong tr√≥c',
            testMethod: 'G√µ ki·ªÉm tra √¢m thanh ƒë·ªÅu',
            standard: 'Kh√¥ng c√≥ √¢m thanh r·ªóng',
            icon: 'fas fa-hand-rock'
        },
        {
            aspect: 'ƒê·ªô Ph·∫≥ng',
            description: 'B·ªÅ m·∫∑t ph·∫≥ng, kh√¥ng l·ªìi l√µm, ch√™nh l·ªách t·ªëi ƒëa 2mm/2m',
            testMethod: 'Th∆∞·ªõc th·∫≥ng 2m ki·ªÉm tra',
            standard: '‚â§ 2mm ch√™nh l·ªách',
            icon: 'fas fa-level-up-alt'
        },
        {
            aspect: 'Ron ƒê·ªÅu',
            description: 'Khe ron ƒë·ªÅu nhau, th·∫≥ng h√†ng, ƒë·∫ßy ƒë·ªß',
            testMethod: 'Quan s√°t b·∫±ng m·∫Øt th∆∞·ªùng',
            standard: 'Ron 2-3mm ƒë·ªÅu nhau',
            icon: 'fas fa-grip-lines'
        },
        {
            aspect: 'V·ªá Sinh',
            description: 'B·ªÅ m·∫∑t s·∫°ch, kh√¥ng c√≤n v·∫øt keo, xi mƒÉng',
            testMethod: 'Ki·ªÉm tra tr·ª±c quan',
            standard: 'B·ªÅ m·∫∑t s·∫°ch 100%',
            icon: 'fas fa-sparkles'
        }
    ];

    // FAQ data
    const faqData = [
        {
            question: 'N√™n ch·ªçn g·∫°ch hay ƒë√° t·ª± nhi√™n?',
            answer: 'G·∫°ch ceramic/porcelain: gi√° h·ª£p l√Ω, b·∫£o d∆∞·ª°ng d·ªÖ, ph√π h·ª£p ƒë·∫°i ƒëa s·ªë. ƒê√° t·ª± nhi√™n: sang tr·ªçng, ƒë·ªô b·ªÅn cao nh∆∞ng gi√° ƒë·∫Øt, c·∫ßn b·∫£o d∆∞·ª°ng chuy√™n nghi·ªáp.'
        },
        {
            question: 'Th·ªùi gian thi c√¥ng ·ªëp l√°t bao l√¢u?',
            answer: 'CƒÉn h·ªô 80m¬≤: 3-5 ng√†y. Bao g·ªìm 1 ng√†y chu·∫©n b·ªã, 2-3 ng√†y ·ªëp l√°t, 1 ng√†y ho√†n thi·ªán. Th·ªùi gian ph·ª• thu·ªôc ƒë·ªô ph·ª©c t·∫°p pattern v√† di·ªán t√≠ch.'
        },
        {
            question: 'L√†m sao ƒë·ªÉ tr√°nh g·∫°ch b·ªã n·ª©t?',
            answer: 'S·ª≠ d·ª•ng keo d√°n ch·∫•t l∆∞·ª£ng, ƒë·ªÉ khe co gi√£n ƒë·ªß r·ªông, tr√°nh va ƒë·∫≠p m·∫°nh. V·ªõi ƒë√° t·ª± nhi√™n c·∫ßn x·ª≠ l√Ω ch·ªëng th·∫•m ƒë·ªÉ tr√°nh n·ª©t do thay ƒë·ªïi ƒë·ªô ·∫©m.'
        },
        {
            question: 'Chi ph√≠ b·∫£o d∆∞·ª°ng ·ªëp l√°t nh∆∞ th·∫ø n√†o?',
            answer: 'G·∫°ch ceramic: 20,000-40,000 VNƒê/m¬≤/2 nƒÉm (l√†m s·∫°ch chuy√™n s√¢u). ƒê√° t·ª± nhi√™n: 50,000-100,000 VNƒê/m¬≤/2 nƒÉm (ƒë√°nh b√≥ng, seal b·∫£o v·ªá).'
        }
    ];

    const currentTiling = tilingTypes.find(type => type.id === activeTab);

    return (
        <div className="construction-detail-page">
            {/* Hero Section */}
            <section className="section section-gradient">
                <div className="container">
                    <div className="text-center">
                        <h1 className="section-title">
                            üß± B√°o Gi√° Thi C√¥ng ·ªêp L√°t G·∫°ch & ƒê√° Hoa C∆∞∆°ng 2025
                        </h1>
                        <p className="section-subtitle">
                            B√°o gi√° chi ti·∫øt ·ªëp l√°t g·∫°ch ceramic, porcelain, ƒë√° granite, marble 
                            t·∫°i H√† N·ªôi & Nha Trang. Thi c√¥ng chu·∫©n k·ªπ thu·∫≠t - B·∫£o h√†nh d√†i h·∫°n.
                        </p>
                        
                        <div className="hero-features grid-4">
                            <div className="feature-item">
                                <i className="fas fa-shield-alt"></i>
                                <span>Ch·ªëng Th·∫•m</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-gem"></i>
                                <span>B·ªÅn ƒê·∫πp</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-broom"></i>
                                <span>D·ªÖ V·ªá Sinh</span>
                            </div>
                            <div className="feature-item">
                                <i className="fas fa-palette"></i>
                                <span>ƒêa D·∫°ng M√†u S·∫Øc</span>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Tiling Types */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üè∫ Lo·∫°i G·∫°ch & ƒê√° - B√°o Gi√°</h2>
                    <p className="section-subtitle">
                        3 d√≤ng s·∫£n ph·∫©m ch√≠nh ph√π h·ª£p m·ªçi kh√¥ng gian v√† ng√¢n s√°ch
                    </p>

                    <div className="tabs">
                        {tilingTypes.map(type => (
                            <button
                                key={type.id}
                                className={`tab ${activeTab === type.id ? 'active' : ''}`}
                                onClick={() => setActiveTab(type.id)}
                            >
                                {type.name}
                            </button>
                        ))}
                    </div>

                    {currentTiling && (
                        <div className="tiling-detail">
                            <div className="detail-header" style={{ background: `linear-gradient(135deg, ${currentTiling.bgColor}, ${currentTiling.bgColor}dd)` }}>
                                <h3>{currentTiling.name}</h3>
                                <div className="price-range">{currentTiling.price}</div>
                                <p>{currentTiling.description}</p>
                            </div>

                            <div className="detail-content grid-2">
                                <div className="features-section">
                                    <h4>‚ú® Bao g·ªìm:</h4>
                                    <ul className="features-list">
                                        {currentTiling.features.map((feature, index) => (
                                            <li key={index}>
                                                <i className="fas fa-check"></i>
                                                {feature}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="suitable-section">
                                    <h4>üè† Ph√π h·ª£p:</h4>
                                    <div className="tags">
                                        {currentTiling.suitable.map((item, index) => (
                                            <span key={index} className="tag">{item}</span>
                                        ))}
                                    </div>
                                </div>
                            </div>

                            <div className="detail-actions">
                                <a href="/lien-he" className="btn btn-primary">
                                    <i className="fas fa-phone"></i>
                                    Li√™n H·ªá B√°o Gi√°
                                </a>
                                <a href="/bao-gia/tu-van-bao-gia" className="btn btn-secondary">
                                    <i className="fas fa-calculator"></i>
                                    T√≠nh Chi Ph√≠
                                </a>
                            </div>
                        </div>
                    )}
                </div>
            </section>

            {/* Technical Specifications */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">üìê Th√¥ng S·ªë K·ªπ Thu·∫≠t & Gi√°</h2>
                    <p className="section-subtitle">
                        B·∫£ng gi√° chi ti·∫øt theo k√≠ch th∆∞·ªõc v√† lo·∫°i g·∫°ch/ƒë√°
                    </p>

                    <div className="specifications-grid grid-2">
                        {specifications.map((spec, index) => (
                            <div key={index} className="spec-card card">
                                <div className="card-header">
                                    <h3>{spec.category}</h3>
                                </div>
                                <div className="card-body">
                                    <div className="spec-list">
                                        {spec.items.map((item, i) => (
                                            <div key={i} className="spec-item">
                                                <div className="spec-name">{item.name}</div>
                                                <div className="spec-price">{item.price}</div>
                                                <div className="spec-note">{item.note}</div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Installation Process */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">üîß Quy Tr√¨nh Thi C√¥ng Chu·∫©n</h2>
                    <p className="section-subtitle">
                        5 b∆∞·ªõc thi c√¥ng ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng v√† th·∫©m m·ªπ
                    </p>

                    <div className="process-timeline">
                        {installationSteps.map((step, index) => (
                            <div key={index} className="process-step">
                                <div className="step-number">
                                    <i className={step.icon}></i>
                                    <span>{step.step}</span>
                                </div>
                                <div className="step-content">
                                    <h3>{step.title}</h3>
                                    <p>{step.description}</p>
                                    <div className="step-duration">
                                        <i className="far fa-clock"></i>
                                        {step.duration}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Quality Standards */}
            <section className="section section-alt">
                <div className="container">
                    <h2 className="section-title">‚úÖ Ti√™u Chu·∫©n Ch·∫•t L∆∞·ª£ng</h2>
                    <p className="section-subtitle">
                        C√°c ti√™u ch√≠ ki·ªÉm tra ch·∫•t l∆∞·ª£ng thi c√¥ng ·ªëp l√°t
                    </p>

                    <div className="quality-grid grid-2">
                        {qualityCriteria.map((criteria, index) => (
                            <div key={index} className="quality-card card">
                                <div className="card-header">
                                    <h3>
                                        <i className={criteria.icon}></i>
                                        {criteria.aspect}
                                    </h3>
                                </div>
                                <div className="card-body">
                                    <p><strong>M√¥ t·∫£:</strong> {criteria.description}</p>
                                    <p><strong>C√°ch ki·ªÉm tra:</strong> {criteria.testMethod}</p>
                                    <p><strong>Ti√™u chu·∫©n:</strong> <span className="standard">{criteria.standard}</span></p>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="section">
                <div className="container">
                    <h2 className="section-title">‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h2>
                    
                    <div className="faq-list">
                        {faqData.map((faq, index) => (
                            <div key={index} className="faq-item">
                                <button 
                                    className={`faq-question ${activeFaq === index ? 'active' : ''}`}
                                    onClick={() => setActiveFaq(activeFaq === index ? null : index)}
                                >
                                    <span>{faq.question}</span>
                                    <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                </button>
                                {activeFaq === index && (
                                    <div className="faq-answer">
                                        <p>{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <CTAContent />
        </div>
    );
};

export default OpLatGachDaPage;
