// src/pages/ung-dung/HuongNhaHopTuoiPage.js
import React, { useState, useRef } from 'react';
import Header from '../../components/Header/Header';
import Footer from '../../components/Footer/Footer';
import FloatButtons from '../../components/FloatButtons/FloatButtons';
import CTAContent from '../../components/CTAContent/CTAContent';
import GeminiService from './GeminiService';
import '../../styles/CommonStyles.css';

const HuongNhaHopTuoiPage = () => {
    const [formData, setFormData] = useState({
        namSinh: '',
        gioiTinh: 'nam',
        thangSinh: '1',
        ngaySinh: '1',
        huongNha: ''
    });
    const [loading, setLoading] = useState(false);
    const [result, setResult] = useState('');
    const [activeFaq, setActiveFaq] = useState(null);
    const resultRef = useRef(null);

    const months = Array.from({ length: 12 }, (_, i) => ({
        value: String(i + 1),
        label: `Th√°ng ${i + 1}`
    }));

    const days = Array.from({ length: 31 }, (_, i) => ({
        value: String(i + 1),
        label: `Ng√†y ${i + 1}`
    }));

    const directions = [
        { value: 'ƒê√¥ng', label: 'ƒê√¥ng - H∆∞·ªõng m·∫∑t tr·ªùi m·ªçc üåÖ' },
        { value: 'T√¢y', label: 'T√¢y - H∆∞·ªõng m·∫∑t tr·ªùi l·∫∑n üåá' },
        { value: 'Nam', label: 'Nam - H∆∞·ªõng ·∫•m √°p, ƒë√≥n n·∫Øng ‚òÄÔ∏è' },
        { value: 'B·∫Øc', label: 'B·∫Øc - H∆∞·ªõng m√°t m·∫ª, ·ªïn ƒë·ªãnh ‚ùÑÔ∏è' },
        { value: 'ƒê√¥ng B·∫Øc', label: 'ƒê√¥ng B·∫Øc - H∆∞·ªõng ph·ª•, th√≠ch h·ª£p vƒÉn ph√≤ng üß≠' },
        { value: 'ƒê√¥ng Nam', label: 'ƒê√¥ng Nam - H∆∞·ªõng t√†i l·ªôc, th·ªãnh v∆∞·ª£ng üí∞' },
        { value: 'T√¢y B·∫Øc', label: 'T√¢y B·∫Øc - H∆∞·ªõng quy·ªÅn l·ª±c, uy t√≠n üëë' },
        { value: 'T√¢y Nam', label: 'T√¢y Nam - H∆∞·ªõng gia ƒë√¨nh, h·∫°nh ph√∫c ‚ù§Ô∏è' }
    ];

    const faqData = [
        {
            question: "L√†m th·∫ø n√†o ƒë·ªÉ x√°c ƒë·ªãnh h∆∞·ªõng nh√† ch√≠nh x√°c?",
            answer: "S·ª≠ d·ª•ng la b√†n ho·∫∑c ·ª©ng d·ª•ng mobile ƒë·ªÉ ƒëo h∆∞·ªõng c·ª≠a ch√≠nh. ƒê·ª©ng trong nh√†, h∆∞·ªõng ra c·ª≠a ch√≠nh ƒë·ªÉ x√°c ƒë·ªãnh h∆∞·ªõng nh√†. N√™n ƒëo nhi·ªÅu l·∫ßn ƒë·ªÉ ƒë·∫£m b·∫£o ch√≠nh x√°c."
        },
        {
            question: "H∆∞·ªõng nh√† c√≥ ·∫£nh h∆∞·ªüng nh∆∞ th·∫ø n√†o ƒë·∫øn cu·ªôc s·ªëng?",
            answer: "H∆∞·ªõng nh√† ·∫£nh h∆∞·ªüng ƒë·∫øn nƒÉng l∆∞·ª£ng, s·ª©c kh·ªèe, t√†i v·∫≠n v√† c√°c m·ªëi quan h·ªá trong gia ƒë√¨nh. H∆∞·ªõng h·ª£p m·ªánh s·∫Ω mang l·∫°i may m·∫Øn, h∆∞·ªõng xung kh·∫Øc c√≥ th·ªÉ g√¢y kh√≥ khƒÉn."
        },
        {
            question: "N·∫øu h∆∞·ªõng nh√† kh√¥ng h·ª£p tu·ªïi th√¨ ph·∫£i l√†m sao?",
            answer: "C√≥ th·ªÉ h√≥a gi·∫£i b·∫±ng c√°ch: thay ƒë·ªïi c·ª≠a ch√≠nh, s·ª≠ d·ª•ng m√†u s·∫Øc v√† v·∫≠t ph·∫©m phong th·ªßy ph√π h·ª£p, b·ªë tr√≠ n·ªôi th·∫•t h·ª£p l√Ω, ho·∫∑c tham kh·∫£o chuy√™n gia ƒë·ªÉ c√≥ gi·∫£i ph√°p c·ª• th·ªÉ."
        },
        {
            question: "C√≥ n√™n thay ƒë·ªïi h∆∞·ªõng c·ª≠a ch√≠nh kh√¥ng?",
            answer: "Ch·ªâ n√™n thay ƒë·ªïi khi th·ª±c s·ª± c·∫ßn thi·∫øt v√† c√≥ ƒëi·ªÅu ki·ªán. Th∆∞·ªùng th√¨ vi·ªác h√≥a gi·∫£i b·∫±ng phong th·ªßy n·ªôi th·∫•t s·∫Ω hi·ªáu qu·∫£ v√† ti·∫øt ki·ªám h∆°n vi·ªác s·ª≠a ƒë·ªïi ki·∫øn tr√∫c."
        },
        {
            question: "Bao l√¢u th√¨ th·∫•y hi·ªáu qu·∫£ khi thay ƒë·ªïi phong th·ªßy?",
            answer: "Th∆∞·ªùng trong v√≤ng 3-6 th√°ng s·∫Ω th·∫•y nh·ªØng thay ƒë·ªïi t√≠ch c·ª±c. Tuy nhi√™n, c·∫ßn ki√™n tr√¨ v√† th·ª±c hi·ªán ƒë√∫ng c√°c l·ªùi khuy√™n phong th·ªßy ƒë·ªÉ ƒë·∫°t hi·ªáu qu·∫£ t·ªët nh·∫•t."
        }
    ];

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        if (!formData.namSinh || !formData.huongNha) {
            alert('Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß nƒÉm sinh v√† h∆∞·ªõng nh√†');
            return;
        }

        const currentYear = new Date().getFullYear();
        if (formData.namSinh < 1920 || formData.namSinh > currentYear) {
            alert('NƒÉm sinh kh√¥ng h·ª£p l·ªá');
            return;
        }

        setLoading(true);
        setResult('');

        try {
            const response = await GeminiService.getConsultation('huong-nha-hop-tuoi', formData);

            if (response.success) {
                setResult(response.data);
                setTimeout(() => {
                    resultRef.current?.scrollIntoView({ behavior: 'smooth' });
                }, 100);
            } else {
                setResult(response.error || 'ƒê√£ x·∫£y ra l·ªói khi t∆∞ v·∫•n. Vui l√≤ng th·ª≠ l·∫°i sau.');
            }
        } catch (error) {
            console.error('Error:', error);
            setResult('ƒê√£ x·∫£y ra l·ªói k·∫øt n·ªëi. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi internet v√† th·ª≠ l·∫°i.');
        } finally {
            setLoading(false);
        }
    };

    const toggleFaq = (index) => {
        setActiveFaq(activeFaq === index ? null : index);
    };

    return (
        <div style={{ minHeight: '100vh', backgroundColor: '#ffffff' }}>
            <Header />

            {/* Main content with original styling */}
            <div style={{ marginTop: '80px', padding: '40px 0' }}>
                <div className="container">
                    {/* Hero Section */}
                    <div style={{ textAlign: 'center', marginBottom: '3rem' }}>
                        <h1 style={{
                            fontSize: '2.5rem',
                            fontWeight: '700',
                            background: 'linear-gradient(135deg, #667eea, #764ba2)',
                            WebkitBackgroundClip: 'text',
                            WebkitTextFillColor: 'transparent',
                            marginBottom: '1rem'
                        }}>
                            H∆∞·ªõng Nh√† H·ª£p Tu·ªïi Phong Th·ªßy
                        </h1>
                        <p style={{
                            fontSize: '1.2rem',
                            color: '#64748b',
                            maxWidth: '600px',
                            margin: '0 auto',
                            lineHeight: '1.6'
                        }}>
                            Ph√¢n t√≠ch m·ª©c ƒë·ªô t∆∞∆°ng h·ª£p gi·ªØa h∆∞·ªõng nh√† v√† tu·ªïi t√°c,
                            ƒë∆∞a ra l·ªùi khuy√™n c·∫£i thi·ªán v√† t·ªëi ∆∞u h√≥a phong th·ªßy cho ng√¥i nh√† c·ªßa b·∫°n
                        </p>
                    </div>

                    {/* Form Section */}
                    <div style={{
                        maxWidth: '800px',
                        margin: '0 auto',
                        background: 'white',
                        borderRadius: '20px',
                        boxShadow: '0 8px 30px rgba(0, 0, 0, 0.1)',
                        padding: '2.5rem',
                        marginBottom: '3rem'
                    }}>
                        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>
                            <h2 style={{
                                fontSize: '1.8rem',
                                fontWeight: '600',
                                color: '#2d3748',
                                marginBottom: '0.5rem'
                            }}>
                                Th√¥ng Tin T∆∞ V·∫•n
                            </h2>
                            <p style={{ color: '#64748b', fontSize: '1rem' }}>
                                Cung c·∫•p th√¥ng tin ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c ph√¢n t√≠ch ch√≠nh x√°c v·ªÅ h∆∞·ªõng nh√† c·ªßa b·∫°n
                            </p>
                        </div>

                        <form onSubmit={handleSubmit}>
                            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem' }}>
                                {/* NƒÉm sinh */}
                                <div style={{ marginBottom: '1.5rem' }}>
                                    <label style={{
                                        display: 'block',
                                        marginBottom: '0.5rem',
                                        fontWeight: '600',
                                        color: '#2d3748'
                                    }}>
                                        NƒÉm sinh *
                                    </label>
                                    <input
                                        type="number"
                                        name="namSinh"
                                        value={formData.namSinh}
                                        onChange={handleInputChange}
                                        placeholder="VD: 1990"
                                        required
                                        min="1900"
                                        max="2024"
                                        style={{
                                            width: '100%',
                                            padding: '0.75rem',
                                            border: '2px solid #e2e8f0',
                                            borderRadius: '8px',
                                            fontSize: '1rem',
                                            outline: 'none',
                                            transition: 'border-color 0.3s ease'
                                        }}
                                        onFocus={(e) => e.target.style.borderColor = '#667eea'}
                                        onBlur={(e) => e.target.style.borderColor = '#e2e8f0'}
                                    />
                                </div>

                                {/* Gi·ªõi t√≠nh */}
                                <div style={{ marginBottom: '1.5rem' }}>
                                    <label style={{
                                        display: 'block',
                                        marginBottom: '0.5rem',
                                        fontWeight: '600',
                                        color: '#2d3748'
                                    }}>
                                        Gi·ªõi t√≠nh
                                    </label>
                                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem' }}>
                                        <label style={{
                                            display: 'flex',
                                            alignItems: 'center',
                                            padding: '0.75rem',
                                            border: '2px solid #e2e8f0',
                                            borderRadius: '8px',
                                            cursor: 'pointer',
                                            transition: 'all 0.3s ease',
                                            background: formData.gioiTinh === 'nam' ? '#667eea' : 'white',
                                            color: formData.gioiTinh === 'nam' ? 'white' : '#4a5568'
                                        }}>
                                            <input
                                                type="radio"
                                                name="gioiTinh"
                                                value="nam"
                                                checked={formData.gioiTinh === 'nam'}
                                                onChange={handleInputChange}
                                                style={{ display: 'none' }}
                                            />
                                            <i className="fas fa-mars" style={{ marginRight: '0.5rem' }}></i>
                                            Nam
                                        </label>

                                        <label style={{
                                            display: 'flex',
                                            alignItems: 'center',
                                            padding: '0.75rem',
                                            border: '2px solid #e2e8f0',
                                            borderRadius: '8px',
                                            cursor: 'pointer',
                                            transition: 'all 0.3s ease',
                                            background: formData.gioiTinh === 'nu' ? '#667eea' : 'white',
                                            color: formData.gioiTinh === 'nu' ? 'white' : '#4a5568'
                                        }}>
                                            <input
                                                type="radio"
                                                name="gioiTinh"
                                                value="nu"
                                                checked={formData.gioiTinh === 'nu'}
                                                onChange={handleInputChange}
                                                style={{ display: 'none' }}
                                            />
                                            <i className="fas fa-venus" style={{ marginRight: '0.5rem' }}></i>
                                            N·ªØ
                                        </label>
                                    </div>
                                </div>

                                {/* Th√°ng sinh */}
                                <div style={{ marginBottom: '1.5rem' }}>
                                    <label style={{
                                        display: 'block',
                                        marginBottom: '0.5rem',
                                        fontWeight: '600',
                                        color: '#2d3748'
                                    }}>
                                        Th√°ng sinh
                                    </label>
                                    <select
                                        name="thangSinh"
                                        value={formData.thangSinh}
                                        onChange={handleInputChange}
                                        style={{
                                            width: '100%',
                                            padding: '0.75rem',
                                            border: '2px solid #e2e8f0',
                                            borderRadius: '8px',
                                            fontSize: '1rem',
                                            outline: 'none',
                                            background: 'white',
                                            cursor: 'pointer'
                                        }}
                                    >
                                        {months.map(month => (
                                            <option key={month.value} value={month.value}>
                                                {month.label}
                                            </option>
                                        ))}
                                    </select>
                                </div>

                                {/* Ng√†y sinh */}
                                <div style={{ marginBottom: '1.5rem' }}>
                                    <label style={{
                                        display: 'block',
                                        marginBottom: '0.5rem',
                                        fontWeight: '600',
                                        color: '#2d3748'
                                    }}>
                                        Ng√†y sinh
                                    </label>
                                    <select
                                        name="ngaySinh"
                                        value={formData.ngaySinh}
                                        onChange={handleInputChange}
                                        style={{
                                            width: '100%',
                                            padding: '0.75rem',
                                            border: '2px solid #e2e8f0',
                                            borderRadius: '8px',
                                            fontSize: '1rem',
                                            outline: 'none',
                                            background: 'white',
                                            cursor: 'pointer'
                                        }}
                                    >
                                        {days.map(day => (
                                            <option key={day.value} value={day.value}>
                                                {day.label}
                                            </option>
                                        ))}
                                    </select>
                                </div>
                            </div>

                            {/* H∆∞·ªõng nh√† - full width */}
                            <div style={{ marginBottom: '2rem' }}>
                                <label style={{
                                    display: 'block',
                                    marginBottom: '0.5rem',
                                    fontWeight: '600',
                                    color: '#2d3748'
                                }}>
                                    H∆∞·ªõng nh√† hi·ªán t·∫°i *
                                </label>
                                <select
                                    name="huongNha"
                                    value={formData.huongNha}
                                    onChange={handleInputChange}
                                    required
                                    style={{
                                        width: '100%',
                                        padding: '0.75rem',
                                        border: '2px solid #e2e8f0',
                                        borderRadius: '8px',
                                        fontSize: '1rem',
                                        outline: 'none',
                                        background: 'white',
                                        cursor: 'pointer'
                                    }}
                                >
                                    <option value="">-- Ch·ªçn h∆∞·ªõng nh√† --</option>
                                    {directions.map(direction => (
                                        <option key={direction.value} value={direction.value}>
                                            {direction.label}
                                        </option>
                                    ))}
                                </select>
                                <small style={{
                                    display: 'block',
                                    marginTop: '0.5rem',
                                    color: '#64748b',
                                    fontSize: '0.875rem',
                                    fontStyle: 'italic'
                                }}>
                                    üí° M·∫πo: ƒê·ª©ng trong nh√†, h∆∞·ªõng ra c·ª≠a ch√≠nh ƒë·ªÉ x√°c ƒë·ªãnh h∆∞·ªõng nh√†
                                </small>
                            </div>

                            {/* Submit Button */}
                            <div style={{ textAlign: 'center' }}>
                                <button
                                    type="submit"
                                    disabled={loading}
                                    style={{
                                        background: loading ? '#94a3b8' : 'linear-gradient(135deg, #667eea, #764ba2)',
                                        color: 'white',
                                        padding: '1rem 2rem',
                                        border: 'none',
                                        borderRadius: '12px',
                                        fontSize: '1.1rem',
                                        fontWeight: '600',
                                        cursor: loading ? 'not-allowed' : 'pointer',
                                        transition: 'all 0.3s ease',
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center',
                                        gap: '0.5rem',
                                        margin: '0 auto',
                                        minWidth: '200px'
                                    }}
                                    onMouseEnter={(e) => {
                                        if (!loading) {
                                            e.target.style.transform = 'translateY(-2px)';
                                            e.target.style.boxShadow = '0 8px 25px rgba(102, 126, 234, 0.4)';
                                        }
                                    }}
                                    onMouseLeave={(e) => {
                                        if (!loading) {
                                            e.target.style.transform = 'translateY(0)';
                                            e.target.style.boxShadow = 'none';
                                        }
                                    }}
                                >
                                    {loading ? (
                                        <>
                                            <i className="fas fa-spinner fa-spin"></i>
                                            ƒêang ph√¢n t√≠ch...
                                        </>
                                    ) : (
                                        <>
                                            <i className="fas fa-compass"></i>
                                            Ki·ªÉm Tra H∆∞·ªõng Nh√†
                                        </>
                                    )}
                                </button>
                            </div>
                        </form>
                    </div>

                    {/* Result Section */}
                    {result && (
                        <div ref={resultRef} style={{
                            maxWidth: '900px',
                            margin: '0 auto 3rem auto',
                            background: 'white',
                            borderRadius: '20px',
                            boxShadow: '0 8px 30px rgba(0, 0, 0, 0.1)',
                            overflow: 'hidden'
                        }}>
                            <div style={{
                                background: 'linear-gradient(135deg, #667eea, #764ba2)',
                                color: 'white',
                                padding: '1.5rem 2rem',
                                textAlign: 'center'
                            }}>
                                <h3 style={{
                                    margin: 0,
                                    fontSize: '1.5rem',
                                    fontWeight: '600'
                                }}>
                                    üß≠ K·∫øt Qu·∫£ Ph√¢n T√≠ch Phong Th·ªßy
                                </h3>
                                <p style={{ margin: '0.5rem 0 0 0', opacity: 0.9 }}>
                                    ƒê√°nh gi√° chi ti·∫øt v·ªÅ m·ª©c ƒë·ªô h·ª£p tu·ªïi c·ªßa h∆∞·ªõng nh√† b·∫°n
                                </p>
                            </div>
                            <div style={{
                                padding: '2rem',
                                lineHeight: '1.8',
                                color: '#2d3748'
                            }}>
                                <div
                                    style={{
                                        whiteSpace: 'pre-line',
                                        fontSize: '1rem'
                                    }}
                                    dangerouslySetInnerHTML={{
                                        __html: result.replace(/\n/g, '<br>')
                                    }}
                                />
                            </div>
                        </div>
                    )}

                    {/* FAQ Section */}
                    <div style={{
                        maxWidth: '800px',
                        margin: '0 auto',
                        marginBottom: '3rem'
                    }}>
                        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>
                            <h2 style={{
                                fontSize: '2rem',
                                fontWeight: '600',
                                color: '#2d3748',
                                marginBottom: '1rem'
                            }}>
                                C√¢u H·ªèi Th∆∞·ªùng G·∫∑p
                            </h2>
                            <p style={{ color: '#64748b', fontSize: '1rem' }}>
                                Nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn v·ªÅ h∆∞·ªõng nh√† v√† phong th·ªßy
                            </p>
                        </div>

                        <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
                            {faqData.map((faq, index) => (
                                <div
                                    key={index}
                                    style={{
                                        background: 'white',
                                        borderRadius: '12px',
                                        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)',
                                        overflow: 'hidden',
                                        border: activeFaq === index ? '2px solid #667eea' : '2px solid transparent'
                                    }}
                                >
                                    <button
                                        onClick={() => toggleFaq(index)}
                                        style={{
                                            width: '100%',
                                            padding: '1.5rem',
                                            background: activeFaq === index ? '#667eea' : 'white',
                                            color: activeFaq === index ? 'white' : '#2d3748',
                                            border: 'none',
                                            textAlign: 'left',
                                            cursor: 'pointer',
                                            fontSize: '1rem',
                                            fontWeight: '600',
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            transition: 'all 0.3s ease'
                                        }}
                                    >
                                        <span>{faq.question}</span>
                                        <i className={`fas fa-chevron-${activeFaq === index ? 'up' : 'down'}`}></i>
                                    </button>

                                    {activeFaq === index && (
                                        <div style={{
                                            padding: '1.5rem',
                                            background: '#f8f9fa',
                                            borderTop: '1px solid #e2e8f0'
                                        }}>
                                            <p style={{
                                                margin: 0,
                                                color: '#4a5568',
                                                lineHeight: '1.6'
                                            }}>
                                                {faq.answer}
                                            </p>
                                        </div>
                                    )}
                                </div>
                            ))}
                        </div>
                    </div>

                    {/* CTA Section */}
                    <CTAContent />
                </div>
            </div>

            <Footer />
            <FloatButtons />
        </div>
    );
};

export default HuongNhaHopTuoiPage;